// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/idTableStaking/admin/end_staking.cdc (752B)
// ../../../transactions/idTableStaking/admin/move_tokens.cdc (542B)
// ../../../transactions/idTableStaking/admin/pay_rewards.cdc (550B)
// ../../../transactions/idTableStaking/admin/remove_node.cdc (610B)
// ../../../transactions/idTableStaking/admin/transfer_minter_deploy.cdc (701B)
// ../../../transactions/idTableStaking/create_staking_request.cdc (1.402kB)
// ../../../transactions/idTableStaking/delegation/del_create_delegation.cdc (424B)
// ../../../transactions/idTableStaking/delegation/del_register_delegator.cdc (658B)
// ../../../transactions/idTableStaking/delegation/del_request_unstaking.cdc (569B)
// ../../../transactions/idTableStaking/delegation/del_stake_new_tokens.cdc (842B)
// ../../../transactions/idTableStaking/delegation/del_stake_rewarded.cdc (575B)
// ../../../transactions/idTableStaking/delegation/del_stake_unlocked.cdc (575B)
// ../../../transactions/idTableStaking/delegation/del_withdraw_reward_tokens.cdc (850B)
// ../../../transactions/idTableStaking/delegation/del_withdraw_unlocked_tokens.cdc (850B)
// ../../../transactions/idTableStaking/delegation/get_delegator_committed.cdc (281B)
// ../../../transactions/idTableStaking/delegation/get_delegator_request.cdc (281B)
// ../../../transactions/idTableStaking/delegation/get_delegator_rewarded.cdc (279B)
// ../../../transactions/idTableStaking/delegation/get_delegator_staked.cdc (275B)
// ../../../transactions/idTableStaking/delegation/get_delegator_unlocked.cdc (279B)
// ../../../transactions/idTableStaking/delegation/get_delegator_unstaked.cdc (279B)
// ../../../transactions/idTableStaking/get_current_table.cdc (190B)
// ../../../transactions/idTableStaking/get_nodeType_ratio.cdc (235B)
// ../../../transactions/idTableStaking/get_node_committedTokens.cdc (221B)
// ../../../transactions/idTableStaking/get_node_direct_stakedTokens.cdc (224B)
// ../../../transactions/idTableStaking/get_node_initial_weight.cdc (312B)
// ../../../transactions/idTableStaking/get_node_networking_addr.cdc (320B)
// ../../../transactions/idTableStaking/get_node_networking_key.cdc (312B)
// ../../../transactions/idTableStaking/get_node_rewardedTokens.cdc (222B)
// ../../../transactions/idTableStaking/get_node_role.cdc (292B)
// ../../../transactions/idTableStaking/get_node_stakedTokens.cdc (218B)
// ../../../transactions/idTableStaking/get_node_staking_key.cdc (306B)
// ../../../transactions/idTableStaking/get_node_total_commitment.cdc (221B)
// ../../../transactions/idTableStaking/get_node_unlockedTokens.cdc (222B)
// ../../../transactions/idTableStaking/get_node_unstakedTokens.cdc (222B)
// ../../../transactions/idTableStaking/get_proposed_table.cdc (192B)
// ../../../transactions/idTableStaking/get_stakeRequirements.cdc (241B)
// ../../../transactions/idTableStaking/get_table.cdc (184B)
// ../../../transactions/idTableStaking/get_totalStaked_by_type.cdc (250B)
// ../../../transactions/idTableStaking/get_unstaking_request.cdc (222B)
// ../../../transactions/idTableStaking/get_weeklyPayout.cdc (196B)
// ../../../transactions/idTableStaking/request_unstake.cdc (528B)
// ../../../transactions/idTableStaking/stake_new_tokens.cdc (792B)
// ../../../transactions/idTableStaking/stake_rewarded_tokens.cdc (531B)
// ../../../transactions/idTableStaking/stake_unlocked_tokens.cdc (531B)
// ../../../transactions/idTableStaking/withdraw_reward_tokens.cdc (805B)
// ../../../transactions/idTableStaking/withdraw_unlocked_tokens.cdc (805B)
// ../../../transactions/inspect_field.cdc (122B)
// ../../../transactions/qc/create_qc_object.cdc (624B)
// ../../../transactions/qc/get_all_votes.cdc (126B)
// ../../../transactions/qc/get_clusters.cdc (133B)
// ../../../transactions/qc/get_votes_in_cluster.cdc (163B)
// ../../../transactions/qc/reset_qc_voting.cdc (500B)
// ../../../transactions/qc/set_collector_clusters.cdc (548B)
// ../../../transactions/qc/submit_qc_vote.cdc (518B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _TransactionsIdtablestakingAdminEnd_stakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x6a\xdb\x40\x10\x86\xef\x7a\x8a\x9f\x1c\x8a\x03\xc5\xea\x59\xd4\x0d\x4a\xe5\x82\x20\xe4\x10\xeb\x52\x42\x0e\xeb\xdd\x91\xb5\xad\xbc\x23\x76\x47\x51\xc0\xf8\xdd\xcb\x4a\x96\x51\x9b\x66\x8e\xf6\xec\x37\xdf\x3f\x23\x7b\xec\xd8\x0b\x7e\xb4\x3c\x94\x45\xa5\xf6\x2d\xed\x44\xfd\xb6\xee\x80\xda\xf3\x11\x5f\xde\xca\x62\xfb\x58\x95\xd5\xcf\x2a\xbf\x7f\xd8\xe6\x45\xf1\xb4\xdd\xed\x92\x24\x4d\x51\x35\x36\x40\xbc\x72\x41\x69\xb1\xec\x40\xce\x04\x48\x43\x08\x17\x82\xea\xc7\x3f\x3e\x63\x68\xac\x6e\xe0\xa9\xee\x63\x8b\x63\x43\x01\x11\x31\x58\x69\x60\x5d\xe8\xeb\xda\x6a\x4b\x4e\xc6\xa7\x94\x24\x0b\xec\xca\x9a\x90\xe1\x79\x27\xde\xba\xc3\xcb\x2d\x4e\x49\x02\x00\x69\x8a\x07\xd6\xaa\xc5\xab\xf2\x36\x6a\xa3\x66\x0f\x15\x87\x90\x27\xa7\x09\xc2\xa3\x4c\x59\x60\x8c\x85\xdc\x1c\xad\x03\xef\x7f\x91\x96\x11\xd1\x92\x40\xc5\x1f\x9f\xa8\xce\xf0\xe9\xfd\x0a\xd6\xe3\x93\x69\x5e\xe7\xa9\x53\x9e\x56\x4a\x6b\xc9\x90\xf7\xd2\xe4\x5a\x73\xef\x24\x1a\xe1\x52\x69\x8a\x3d\x7b\xcf\xc3\xff\x44\xd4\xbf\xf3\x63\x05\x6a\xeb\xf5\x2c\x81\x0d\x22\x7e\x3d\x31\xbe\x7e\x68\xf4\x6d\x15\x6f\x93\x21\x0d\xc2\x5e\x1d\x28\xad\x5b\x1e\x2e\x1d\x63\xc3\xed\x95\x1f\xeb\xee\x0e\x9d\x72\x56\xaf\x6e\xbe\x73\xdf\x1a\x38\x96\x59\xf3\x2f\xc9\xeb\xd9\x22\xe2\x66\x62\x9c\xa7\xf4\xf4\x46\xba\x17\x5a\x44\x1d\x97\xd7\x75\x9e\x5f\xc9\x94\x45\xc8\x70\x9a\x2e\x94\xe1\x9e\xb9\x3d\x63\x83\xd3\xf9\xda\x1c\x4f\x63\x0d\xac\x83\x35\x61\x01\x89\xb5\x80\x3c\x5b\xf3\x82\x0d\xc4\xf7\x74\x6d\xb9\x08\xbc\xdb\xd5\x9a\x9c\x99\x23\x4f\x9f\xd9\x6a\x26\x3d\xb2\xa1\x51\x69\x81\x9e\xd3\x9c\xff\x04\x00\x00\xff\xff\x77\x12\xf5\xe1\xf0\x02\x00\x00"

func TransactionsIdtablestakingAdminEnd_stakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingAdminEnd_stakingCdc,
		"../../../transactions/idTableStaking/admin/end_staking.cdc",
	)
}

func TransactionsIdtablestakingAdminEnd_stakingCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingAdminEnd_stakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/admin/end_staking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x64, 0xa3, 0x89, 0x34, 0x56, 0x4d, 0x2c, 0x86, 0xd3, 0xd5, 0x6e, 0xdd, 0x9, 0x7e, 0xb7, 0xae, 0x46, 0xcc, 0x29, 0xd9, 0x6b, 0x66, 0xa8, 0xba, 0x81, 0x46, 0xbe, 0xcd, 0x80, 0x70, 0xcf, 0x52}}
	return a, nil
}

var _TransactionsIdtablestakingAdminMove_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xbf\x6e\xf2\x40\x10\xc4\x7b\x3f\xc5\x88\xe2\x93\x69\xec\xaf\x46\x49\x90\x13\x13\xc9\x12\x4a\x01\x6e\x52\x9e\x8f\x35\x38\xd8\xb7\xd6\xdd\x1a\x23\x21\xde\x3d\xf2\x19\x22\xc8\x9f\x2d\x4f\xb3\xb3\xbf\xb9\xa9\x9a\x96\xad\xe0\xb5\xe6\x3e\x4b\x73\x55\xd4\xb4\x16\xb5\xaf\xcc\x16\xa5\xe5\x06\xff\x8f\x59\xba\x78\xcb\xb3\xfc\x3d\x4f\x9e\x97\x8b\x24\x4d\x57\x8b\xf5\x3a\x08\xe2\x18\xf9\xae\x72\x10\xab\x8c\x53\x5a\x2a\x36\x68\xf8\x40\x0e\xc2\x7b\x32\x0e\x05\x49\x4f\x64\x50\x74\x7a\x4f\xe2\x82\xe0\x56\x79\x0a\x02\x00\x88\x63\x2c\x59\xab\x1a\x07\x65\xab\xe1\x34\x4a\xb6\x50\xb0\x54\x92\x25\xa3\x09\xc2\x90\x1d\x21\x4b\xe1\xd1\x90\x6c\x9a\xca\x80\x8b\x0f\xd2\xe2\x2d\x6a\x12\xa8\xe1\x71\x45\xe5\x0c\xff\x7e\xc6\x88\xfc\xca\x78\xaf\xb5\xd4\x2a\x4b\xa1\xd2\x5a\x66\x48\x3a\xd9\x25\x5a\x73\x67\x64\x8a\x93\x17\x5c\xa0\x0a\xb6\x96\xfb\xdf\x40\xd4\xf7\xfb\xc3\x38\xaa\xcb\xe8\x0a\x81\x47\x0c\xf6\xd1\xe8\xf1\xf0\x27\xd1\x53\x38\xfc\xef\x0c\xb1\x13\xb6\x6a\x4b\x71\x59\x73\x7f\x51\x78\xc1\xf4\xcb\x7f\x98\xf9\x1c\xad\x32\x95\x0e\x27\x2f\xdc\xd5\x1b\x18\x96\x2b\xe6\x1d\xa4\xbb\x94\xe7\x71\x26\xa3\xc7\x79\x4c\x4f\x47\xd2\x9d\xd0\x4d\xd4\x3b\xf0\x68\xa8\x2f\xf7\xe5\x85\xd7\xbd\xf3\x67\x00\x00\x00\xff\xff\x17\xe9\xb9\x5b\x1e\x02\x00\x00"

func TransactionsIdtablestakingAdminMove_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingAdminMove_tokensCdc,
		"../../../transactions/idTableStaking/admin/move_tokens.cdc",
	)
}

func TransactionsIdtablestakingAdminMove_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingAdminMove_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/admin/move_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x35, 0xc2, 0xe4, 0x90, 0x6c, 0x4e, 0x71, 0x5c, 0x68, 0x30, 0xbe, 0x12, 0xa3, 0x3d, 0x6, 0x22, 0x8b, 0x84, 0xe3, 0xa1, 0x50, 0xff, 0x1c, 0xf8, 0xcd, 0x68, 0x0, 0x3e, 0xc4, 0x85, 0x48, 0xfc}}
	return a, nil
}

var _TransactionsIdtablestakingAdminPay_rewardsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x3d\x8f\xe2\x30\x10\x86\xfb\xfc\x8a\x57\x14\xa7\xd0\x24\x57\xa3\xbb\x43\xb9\x0b\x27\x45\x42\x5b\x40\x9a\x2d\x07\x67\x02\x59\x8c\x1d\xd9\x93\x0d\x08\xf1\xdf\x57\x4e\x60\x05\xfb\xe1\xd2\x9a\x79\xe6\x79\x67\x9a\x43\x6b\x9d\xe0\xbf\xb6\x7d\x91\x97\xb4\xd1\xbc\x16\xda\x37\x66\x8b\xda\xd9\x03\x7e\x1e\x8b\x7c\xf1\x54\x16\xe5\x73\x99\xfd\x5d\x2e\xb2\x3c\x5f\x2d\xd6\xeb\x28\x4a\x53\x94\xbb\xc6\x43\x1c\x19\x4f\x4a\x1a\x6b\xd0\xd2\xc9\xc3\x71\x4f\xae\xf2\x10\x0b\xd2\x1a\xb2\x63\x78\xa1\x3d\x57\x30\xb6\x62\x1f\x45\xf7\x1d\xe7\x28\x02\x80\x34\xc5\xd2\x2a\xd2\x78\x25\xd7\x04\x05\xd4\xd6\x81\xe0\xb8\x66\xc7\x46\x71\xa0\x05\x52\x91\x63\x50\x44\x56\x1d\x1a\x03\xbb\x79\x61\x25\x03\x42\xb3\x80\xc2\xe7\x8a\xeb\x19\x7e\x7c\x8e\x93\x0c\x2d\xe3\xbc\xd6\x71\x4b\x8e\x63\x52\x4a\x66\xc8\x3a\xd9\x65\x4a\xd9\xce\xc8\x14\xe7\xa1\xe0\x2a\xb5\xb1\xce\xd9\xfe\x2b\x11\xfa\x38\x3f\x3c\xcf\xba\x4e\x6e\x12\xf8\x8d\x80\x4f\x46\xc6\xaf\x6f\x8d\xfe\xc4\x61\xcf\x33\xa4\x5e\xac\xa3\x2d\xa7\xb5\xb6\xfd\xb5\x62\x28\x98\xbe\xf3\xc3\x9b\xcf\xd1\x92\x69\x54\x3c\xf9\x67\x3b\x1d\x96\x2a\x37\xcd\x07\x49\x7f\x3d\xe2\xa0\x33\x19\x19\x97\x31\x3d\x1f\x59\x75\xc2\x77\x51\x1f\xc4\x93\x96\x4e\xab\xf1\x88\xf1\xad\xef\xf2\x16\x00\x00\xff\xff\xfa\xca\x08\xf0\x26\x02\x00\x00"

func TransactionsIdtablestakingAdminPay_rewardsCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingAdminPay_rewardsCdc,
		"../../../transactions/idTableStaking/admin/pay_rewards.cdc",
	)
}

func TransactionsIdtablestakingAdminPay_rewardsCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingAdminPay_rewardsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/admin/pay_rewards.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x8e, 0x1d, 0x2b, 0xdd, 0x94, 0x7a, 0xf2, 0x1d, 0x14, 0x1a, 0xbf, 0x1c, 0xfd, 0xdb, 0x50, 0x77, 0x93, 0x97, 0xaf, 0x38, 0xf8, 0x75, 0xc3, 0xe7, 0x9a, 0x8f, 0x2f, 0x45, 0xf0, 0xea, 0xfa}}
	return a, nil
}

var _TransactionsIdtablestakingAdminRemove_nodeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\x6e\xdb\x30\x10\x86\x77\x3d\xc5\x8f\x0c\x85\x3c\xd4\xec\x6c\xa4\x0d\xd4\xca\x05\x04\x04\x19\x22\x2d\x1d\x69\xf2\x64\xb3\x95\x78\x02\x79\x8a\x1d\x14\x79\xf7\x82\x94\x12\x24\x6d\x73\x23\xc1\xff\xbb\xef\xee\xdc\x38\x71\x10\x7c\x1f\xf8\xdc\xd4\x9d\x3e\x0c\xd4\x8a\xfe\xe5\xfc\x11\x7d\xe0\x11\x9f\x2e\x4d\xbd\xbf\xeb\x9a\xee\x47\x57\x7d\xbd\xdd\x57\x75\x7d\xbf\x6f\xdb\xa2\x50\x0a\xdd\xc9\x45\x48\xd0\x3e\x6a\x23\x8e\x3d\x02\x8d\xfc\x40\x11\xda\x83\x2e\x2e\x4a\x82\x78\xb6\xb4\x90\xe4\x44\x70\x96\xbc\x38\x79\x84\xa4\x46\x45\xf1\x2a\x5d\x3a\xbb\x43\x2b\xc1\xf9\xe3\x06\xbf\x8b\x02\x00\x94\xc2\x2d\x1b\x3d\xe0\x41\x07\x97\x12\xe8\x39\x40\x23\x50\x4f\x81\xbc\x21\x08\x67\x6e\x53\x23\xab\xa3\xb2\xa3\xf3\xe0\xc3\x4f\x32\x92\x11\x03\x09\x74\x7a\xbc\xa7\x7e\x87\x0f\xff\x8e\xb9\xcd\x91\xa5\xdf\x14\x68\xd2\x81\x4a\x6d\x8c\xec\x50\xcd\x72\xaa\x8c\xe1\xd9\x4b\x32\xc2\x5a\x4a\xe1\xc0\x21\xf0\xf9\x7f\x22\xfa\xef\xfe\xa9\x22\x0d\xfd\xf6\x59\x02\x9f\x91\xf0\xdb\x85\x71\xfd\xae\xd1\x97\x32\x6d\x6d\x07\x15\x85\x83\x3e\x92\xea\x07\x3e\xaf\x3f\xf2\x87\xcd\x0b\x3f\xd5\xcd\x0d\x26\xed\x9d\x29\xaf\xbe\xf1\x3c\x58\x78\x96\x67\xcd\x37\x92\x71\x3d\x6e\xd6\xb9\x5a\x18\x4f\xcb\xf4\x74\x21\x33\x0b\xbd\x1a\x35\x2d\x2f\x1f\xf0\xfa\xe3\xdb\x21\xb6\xcb\xa9\xef\xd8\x52\xe9\xec\xa6\x78\x49\x58\x8a\x12\xf8\x31\xa7\x56\xf6\xd3\x9f\x00\x00\x00\xff\xff\x17\x4b\x7f\xfb\x62\x02\x00\x00"

func TransactionsIdtablestakingAdminRemove_nodeCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingAdminRemove_nodeCdc,
		"../../../transactions/idTableStaking/admin/remove_node.cdc",
	)
}

func TransactionsIdtablestakingAdminRemove_nodeCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingAdminRemove_nodeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/admin/remove_node.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0xec, 0xf8, 0x82, 0xda, 0x2f, 0x68, 0x54, 0x55, 0xff, 0x81, 0x4e, 0x78, 0x10, 0xa3, 0xf, 0x2b, 0xe, 0xa1, 0xf0, 0xd6, 0x5a, 0xbd, 0x5e, 0xda, 0x1e, 0xfa, 0x82, 0xe3, 0xa3, 0x80, 0xa6}}
	return a, nil
}

var _TransactionsIdtablestakingAdminTransfer_minter_deployCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xd3\x40\x10\x3d\x7b\x7f\xc5\x53\x0f\xc8\x96\x5a\x3b\x50\x3e\xad\x94\x2a\x44\x42\x42\x08\x84\x10\x9c\xaa\x1e\x36\xeb\x71\x6b\xc5\xd9\xb1\xc6\x63\x42\x54\xe5\xbf\xa3\xf5\x3a\x04\x02\x87\xce\xcd\x33\x6f\x9e\xdf\x7b\xb3\xcd\xa6\x63\x51\xbc\x6f\x79\xfb\x8d\xd7\xe4\x51\x0b\x6f\x30\xfb\x39\xb3\xf4\xe2\xd2\xad\x5e\xd2\x65\xfd\xfc\x99\x7d\xf5\xc6\x18\x15\xeb\x7b\xeb\xb4\x61\x9f\x76\xc3\xaa\x6d\xdc\x47\xda\xf5\x25\x6e\x6e\xbe\x7f\xf0\xfa\xfa\xf6\xf6\x1c\x8e\x2b\x2a\x31\x7d\x67\x78\x30\x06\xe8\x84\x3a\x2b\x94\xf6\xcd\x9d\x27\x29\xb1\x18\xf4\x7e\xe1\x1c\x0f\x5e\x47\x44\xd2\x92\xc2\x3a\xa7\xb8\xfa\x73\x96\x76\x76\x17\xe0\x71\x2d\x33\x00\x60\x92\x9a\x05\x6b\xda\xa1\xf1\x38\x4a\xc0\x83\x49\x92\xc0\x90\xdb\xaa\xfa\x72\x68\xa7\x6b\xda\x65\x26\xd9\x9b\x71\xb5\x28\x0a\xbc\x63\x11\xde\xc2\x42\xa8\x26\x21\xef\x08\xca\xd0\x7b\x1a\xdd\x23\xda\x5f\x54\x9b\xc6\x07\xfe\xd0\xb7\x51\x0b\x7a\x65\xb1\x77\x34\x32\x05\xb9\xf5\x21\xad\x88\xbe\x9a\x54\xe6\xab\xf1\x0f\xf3\x27\xbf\xd3\xcc\x47\x40\xd3\xab\x58\x65\x79\x9b\x86\x70\x4b\x14\x13\x5f\xf1\x37\x4f\x34\x19\xea\xfa\x1a\x9d\xf5\x8d\x4b\xcf\x96\x3c\xb4\x15\x3c\x2b\x56\x8f\x57\x2f\xd4\xf3\x20\x8e\xce\xb2\xa3\xf9\xa5\x90\x55\x82\x3d\x6a\xff\xd4\x78\x25\xf9\x3a\x61\xff\xf5\x16\xe7\x98\x5f\x9c\xd8\xcd\xdd\x48\xf5\x99\xb6\x11\x91\xda\xb6\xe5\x2d\x55\x8b\x4d\xc8\xaa\xc4\xd3\xd9\xa1\xf2\xd9\x24\x60\x3c\x4e\x6f\x7f\x50\x3a\xbf\x38\xe1\x3f\x87\xf2\xff\x12\x89\xd3\xcc\x98\x78\xd9\x9e\x74\xc9\x15\xa5\xe1\x85\x85\x9c\xf6\xc6\xec\x0d\x7e\x05\x00\x00\xff\xff\x09\xcf\x19\x4f\xbd\x02\x00\x00"

func TransactionsIdtablestakingAdminTransfer_minter_deployCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingAdminTransfer_minter_deployCdc,
		"../../../transactions/idTableStaking/admin/transfer_minter_deploy.cdc",
	)
}

func TransactionsIdtablestakingAdminTransfer_minter_deployCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingAdminTransfer_minter_deployCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/admin/transfer_minter_deploy.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0xd7, 0xb4, 0x8, 0x78, 0xd1, 0x8e, 0xf2, 0x71, 0x1b, 0xfc, 0x1, 0x69, 0x52, 0x8e, 0x1d, 0x35, 0xef, 0x20, 0xfe, 0xc4, 0x56, 0xb6, 0x77, 0xe0, 0x88, 0x4a, 0xe, 0xc0, 0x9e, 0x2c, 0xab}}
	return a, nil
}

var _TransactionsIdtablestakingCreate_staking_requestCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x51\x6f\xda\x30\x10\xc7\xdf\xf3\x29\x4e\x7d\x98\x82\x44\x61\x0f\xd3\x34\x45\x74\x15\x2b\x54\x42\xad\x68\x05\xe9\xa6\x3d\x1a\xfb\x02\x5e\x83\x2f\xb2\x2f\x4b\x51\xd5\xef\x3e\x39\x51\x42\x08\x65\xa2\x7e\x30\x36\xfe\xdf\xff\xec\xbb\x5f\xf4\x36\x23\xcb\x70\x9b\x52\x31\x9b\xc4\x62\x95\xe2\x92\xc5\xb3\x36\x6b\x48\x2c\x6d\xe1\xf3\xcb\x6c\x32\x9d\xc7\xb3\xf8\x77\x3c\xfe\x71\x3f\x1d\x4f\x26\x8b\xe9\x72\x19\xb4\xa2\x62\x7a\x46\x53\x8b\x6f\xef\x1f\x7e\xc5\x0f\x77\xd3\x79\x2d\x0c\x86\x43\x88\x37\xda\x01\x5b\x61\x9c\x90\xac\xc9\x80\xb4\x28\x18\x1d\x08\x30\x58\x80\x21\x85\xe0\xd8\xe6\x92\x81\x56\x7f\x50\xb2\x0f\x12\x46\x41\x9e\xa9\x52\xc7\x1b\x84\xcc\x52\x46\x0e\x15\xcc\x14\x1a\xd6\xbc\x83\xf2\xb2\x41\xd0\x32\x0e\xb5\x8a\x60\xc9\x56\x9b\x75\x1f\x02\x68\x0d\x4b\x29\x46\xf0\x34\x33\xfc\xad\x73\x62\x90\x0b\xb2\xfe\xc1\x63\xa5\x2c\x3a\x77\xc2\x61\xaf\xbb\xc3\xdd\x09\x8d\xab\x2a\x77\x5a\x20\xb6\x94\x1b\x8e\xe0\xe9\x56\xbf\x7c\xfd\xd2\x3f\x38\x93\x39\x3f\xa2\x95\x68\x58\xac\xb1\x96\xf4\xe0\x35\x28\x55\x29\x32\x24\x75\xb5\x17\x98\x44\xf0\xa9\x29\xfe\xe0\xa7\xc8\x53\xae\x74\x99\xc5\x4c\x58\x0c\x85\x94\x1c\xc1\x38\xe7\xcd\x58\x4a\x9f\xb4\x71\x2a\x2f\x8a\x69\x32\x68\xdb\xc1\x15\xf8\x88\xc1\x8a\xac\xa5\x62\xd4\xf5\xfe\x1e\xfa\xfe\x46\x30\x74\x4c\x56\xac\x71\xd8\xc4\x96\xc7\xbd\x83\x87\x5c\x5f\x43\x26\x8c\x96\xe1\xc5\x0d\xe5\xa9\x02\x43\x0c\x95\x2f\x58\x4c\xd0\xa2\x91\x08\x4c\xe0\x59\x81\x32\xfe\xa2\xb7\xbf\x9a\x7f\xa8\x27\xc2\x53\x88\x16\x46\x97\xef\xa0\x39\x10\x4a\xcd\x49\xe1\x02\x25\x59\x55\x76\x5d\xab\x4e\xa9\x4f\x8d\x8a\x04\x3f\x9f\x19\xf0\x0e\x20\x47\x7f\x7d\xd8\xaa\x44\xe4\x60\x7b\xa6\x45\x1b\xb1\xfd\xfa\xcc\x60\xf6\x1d\x73\x37\xb4\xdd\x6a\x66\x54\x11\x8c\x2e\x8f\x48\x18\x14\x9a\x37\xca\x8a\x22\xac\x61\xad\x7e\x7b\xfd\xb3\x52\x74\x28\x3e\xd8\xb6\xba\xdc\x2c\x74\x72\x0c\x5e\xa7\xd9\xf3\x86\x86\x1a\xc3\xff\x8a\x96\x15\xa2\x8f\x82\x37\x3d\xb8\xba\x02\xa3\x53\x78\x3d\xfc\x0a\x7d\x42\x27\xfe\x62\x38\xba\xdc\xa3\xd6\x07\xa6\x0f\x58\x37\x8e\x6f\x80\xa9\xc3\x4e\x0a\x85\x8e\x2d\xed\x5a\x24\xef\xf5\x41\x35\xbf\xfd\x0b\x00\x00\xff\xff\xdd\x96\x6d\x2e\x7a\x05\x00\x00"

func TransactionsIdtablestakingCreate_staking_requestCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingCreate_staking_requestCdc,
		"../../../transactions/idTableStaking/create_staking_request.cdc",
	)
}

func TransactionsIdtablestakingCreate_staking_requestCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingCreate_staking_requestCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/create_staking_request.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0xa4, 0xd2, 0x24, 0x3b, 0xe2, 0xe0, 0x69, 0xa3, 0x50, 0x6f, 0x28, 0xf2, 0xda, 0xf9, 0x84, 0x22, 0x61, 0xae, 0xed, 0x9, 0x26, 0x9f, 0x6a, 0x7, 0x10, 0x92, 0xc4, 0x71, 0x2a, 0x9a, 0xa4}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_create_delegationCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xfa\x8a\xbb\x7a\x24\xf0\x48\xba\x0e\xa5\xe0\xd6\x29\x18\x4a\x08\xb5\x37\x5d\x4e\xe4\x89\x2d\xec\x48\x66\x34\xa6\x85\xe0\x7f\x2f\x72\x21\x09\x34\x54\x2b\xc1\xdc\x73\x75\x34\xee\x34\x04\x51\xbc\xf6\xe1\xb3\xc8\x2b\x3a\xf4\x5c\x2a\x75\xce\x37\x38\x4a\x38\xe1\xe1\xab\xc8\xb7\xbb\xaa\xa8\x3e\xaa\xec\xf9\x6d\x9b\xe5\xf9\xfb\xb6\x2c\x8d\x51\x21\x1f\xc9\xaa\x0b\x7e\xb1\xc4\xd9\x18\x00\x18\x84\x07\x12\x5e\x90\xb5\xba\x41\x36\x6a\x9b\x59\x1b\x46\xaf\x97\x44\x3a\xeb\x35\x5e\x84\x49\x19\x84\x61\x3c\xf4\xce\xa2\x77\xbe\x83\x06\x68\xcb\xf0\xa1\x66\x44\xa5\x8e\xe5\x16\x89\x69\x4a\x8a\x9a\x7b\x6e\x48\x83\x44\x58\xf2\x20\x6b\x39\xc6\x19\x3c\x8e\x7e\xf6\x49\x45\xc2\x8d\x8b\xca\x02\x8a\xa0\x2b\x73\x29\x4c\x86\xab\xf4\xea\xe3\xbf\xdf\x3f\x5f\xed\x42\x3d\xdf\x59\xce\x77\xa6\xfb\xd9\xf9\x9a\x99\x9e\x16\x7f\x76\xfc\xe4\xf7\xa4\xed\x7f\x28\x49\xc3\xba\xb9\xb3\xee\x1b\xa0\xd4\x20\xd4\x70\x22\x96\xb3\xf1\x64\xcc\xf4\x1d\x00\x00\xff\xff\x6f\xf2\x64\xb9\xa8\x01\x00\x00"

func TransactionsIdtablestakingDelegationDel_create_delegationCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_create_delegationCdc,
		"../../../transactions/idTableStaking/delegation/del_create_delegation.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_create_delegationCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_create_delegationCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_create_delegation.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0xa0, 0x4c, 0xa3, 0xee, 0x7, 0xe8, 0xfc, 0x40, 0xc4, 0x6c, 0xa5, 0xd6, 0x42, 0x1f, 0x68, 0x84, 0xce, 0xb9, 0xd3, 0xd6, 0xd, 0x47, 0x1b, 0x51, 0x93, 0xb2, 0x8c, 0x19, 0xaf, 0x98, 0x7f}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_register_delegatorCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xc1\x6f\xa2\x50\x10\xc6\xef\xfc\x15\xb3\x1e\x36\x90\xac\xb8\x67\xe3\xae\x61\xc5\x4d\x4c\x1a\x63\x84\x4b\x8f\xc3\x63\x40\x5a\x7c\x43\x1e\x43\x69\x63\xfc\xdf\x1b\x9e\x48\xb1\x35\x9d\xd3\x84\xf9\xf8\xcd\x7c\x1f\x14\xc7\x8a\x8d\xc0\xff\x92\xdb\x4d\x18\x63\x52\x52\x24\xf8\x5c\xe8\x1c\x32\xc3\x47\xf8\xfd\xba\x09\xd7\xdb\x78\x13\x3f\xc6\xc1\xbf\x87\x75\x10\x86\xfb\x75\x14\x39\x8e\x18\xd4\x35\x2a\x29\x58\xbb\x9a\x53\x0a\xd2\xd4\x50\x5d\xcf\xa1\x6f\x3c\x38\x39\x0e\x00\x40\x65\xa8\x42\x43\x2e\x2a\x25\x73\x08\x1a\x39\x04\x4a\x71\xa3\xa5\x53\x40\x5f\xb3\x19\x24\x6c\x0c\xb7\x80\x60\x28\x23\x43\x5a\x11\x08\x83\x1c\x08\x3a\x3c\x70\xf2\x44\x4a\x86\x17\x4a\x12\xfb\x7c\x4f\x19\xfc\x81\x9c\xa4\x87\x8e\x6f\xf1\xfc\x9c\x64\x85\x15\x26\x45\x59\xc8\xdb\xe2\xe7\x57\x8f\xfe\x96\x53\xdb\x93\x39\xdd\x99\xee\x9a\xa4\x2c\xd4\x87\xe6\xfc\xd7\xfd\x96\x71\xd1\xef\x50\x0e\xde\x0f\xff\x62\xc8\xf5\x86\x9b\xbb\x5a\x2e\xa1\x42\x5d\x28\x77\xb2\xe2\xa6\x4c\x41\xb3\x5c\x9d\xdf\xf8\xb6\x9e\x6b\x0b\x9d\x78\xce\x38\xa7\x95\x21\x14\x02\x04\x4d\x2d\xa4\x54\x52\x8e\xc2\xa6\xcf\x07\x32\x36\x43\x66\xb7\x61\x51\x1b\x0e\xe2\xc5\xf4\x1a\x9e\xaf\x2c\x6e\x3b\x9a\xba\xb7\xfb\x22\x61\x43\x96\xf9\x79\xd9\xa0\xea\x3e\xad\x5f\xe3\x0b\xb9\x8b\xe9\x78\xcf\x2f\x10\x9e\xdf\xf9\xb3\xfc\x41\xd1\xc1\x31\x27\x9b\x98\xc5\x9d\x1d\xe7\xfc\x1e\x00\x00\xff\xff\x6e\x0e\xf6\xdf\x92\x02\x00\x00"

func TransactionsIdtablestakingDelegationDel_register_delegatorCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_register_delegatorCdc,
		"../../../transactions/idTableStaking/delegation/del_register_delegator.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_register_delegatorCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_register_delegatorCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_register_delegator.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0xff, 0x74, 0x1b, 0xda, 0xa7, 0x6d, 0x13, 0x24, 0x60, 0x4a, 0x8a, 0xc9, 0x1a, 0xf2, 0x34, 0xa7, 0x74, 0x12, 0xd5, 0xd9, 0xbd, 0x3e, 0xc6, 0x4e, 0xe9, 0x4, 0x9a, 0x94, 0x10, 0x2f, 0x1b}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_request_unstakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6b\xe3\x40\x0c\x85\xef\xfe\x15\x22\x87\xc5\xb9\xd8\x7b\x58\xf6\x60\x76\x1b\xdc\x3a\x81\x40\x08\x25\x76\x0e\x3d\x2a\x63\x39\x71\x3b\x19\xb9\xb2\xdc\x04\x4a\xfe\x7b\x99\xba\x31\x2d\x35\x54\x17\x1d\x66\xa4\xf7\xbd\xa7\xfa\xd8\xb0\x28\x2c\x2c\x9f\x96\x59\x81\x3b\x4b\xb9\xe2\x53\xed\xf6\x50\x09\x1f\xe1\xf7\x79\x99\xcd\xd7\xc5\xb2\x78\x28\xd2\xdb\xd5\x3c\xcd\xb2\xcd\x3c\xcf\x83\x20\x50\x41\xd7\xa2\xd1\x9a\x5d\x88\x47\xee\x9c\x26\xb0\x5d\xd4\xe7\xbf\x7f\xa6\xf0\x1a\x04\x00\x00\x71\x0c\x2b\x36\x68\xe1\x05\xa5\xf6\x9b\xa1\x62\x01\x04\xa1\x8a\x84\x9c\x21\x50\x06\x3d\x10\x64\x64\x69\x8f\xca\x02\xbc\x7b\x24\xa3\xef\xd3\x96\x14\xca\xeb\xc3\x86\xaa\x04\x7e\x7d\x87\x8c\xd6\x5c\xd2\x30\xde\xcb\x36\x42\x0d\x0a\x85\x68\x8c\x26\x90\x76\x7a\x48\x8d\xf1\x80\x1e\x0c\x3e\x2a\x8e\x61\xc7\x22\x7c\x1a\xe3\x29\xc7\x78\x7c\xb5\x64\xab\xe8\x33\x14\xfc\x07\x2f\x13\xf5\xbb\xfe\xfd\x48\x78\x13\xfa\x54\x93\x91\xb8\xa3\xe1\x4f\xae\x2c\xb8\xa7\x7b\xd4\xc3\x74\x50\xf6\x35\x9b\x41\x83\xae\x36\xe1\xe4\x8e\x3b\x5b\x82\x63\xbd\x9a\xf8\x62\x61\x00\x9c\x4c\xfb\x44\x2e\x7d\xa3\x33\x99\x4e\xe9\x7a\x9e\x51\x43\x91\xd0\x73\x47\xad\x6e\x5d\xdb\x73\x0d\xc7\xed\xfb\xb0\xf1\xf2\x16\x00\x00\xff\xff\x59\x8c\xf0\xa8\x39\x02\x00\x00"

func TransactionsIdtablestakingDelegationDel_request_unstakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_request_unstakingCdc,
		"../../../transactions/idTableStaking/delegation/del_request_unstaking.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_request_unstakingCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_request_unstakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_request_unstaking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x88, 0x1d, 0xf8, 0x36, 0x96, 0xba, 0x29, 0x5f, 0x9e, 0xc8, 0x53, 0x9a, 0x3f, 0x61, 0x22, 0xe7, 0x41, 0xc3, 0x9d, 0xe8, 0x55, 0xee, 0x64, 0xd8, 0x5e, 0x39, 0x16, 0x38, 0x80, 0xc8, 0xc, 0xa}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_stake_new_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\x94\x40\x10\x85\xef\xfc\x8a\xca\x1e\xcc\xcc\x41\xf0\x60\x3c\x4c\x56\x37\x28\x4c\x32\x71\xc2\x9a\x05\x35\x1e\x6b\x9a\x62\xc0\xed\xe9\x22\x4d\x21\x93\x98\xfd\xef\xa6\x61\x9b\x65\xb3\x93\x68\xac\x4b\xa7\xd3\xef\x51\xdf\x2b\xaa\x39\xb5\x6c\x05\xb6\x9a\x87\x5d\x52\xe0\x41\x53\x2e\x78\xdf\x98\x23\x54\x96\x4f\xf0\xe6\xbc\x4b\xd2\xac\xd8\x15\x3f\x8a\xf8\xe3\x3e\x8d\x93\xe4\x2e\xcd\xf3\x60\xe1\x2a\xf8\x9e\x8c\x17\x6f\xf7\xb7\xdf\x8b\xdb\xcf\x69\xe6\x85\x41\x20\x16\x4d\x87\x4a\x1a\x36\x2b\x3c\x71\x6f\x64\x03\x5f\xb7\xcd\xf9\xdd\xdb\x35\xfc\x0e\x02\x00\x80\x28\x82\x3d\x2b\xd4\xf0\x0b\x6d\xe3\x10\xa0\x62\x0b\x08\x96\x2a\xb2\x64\x14\x81\x30\x48\x4d\x50\x92\xa6\x23\x0a\x5b\xe0\xc3\x4f\x52\x32\xba\x35\xc9\xd3\xc3\x1d\x55\x1b\x78\xf5\x32\x4d\x98\x71\x49\x89\x57\x05\xb3\xb1\xf2\x09\x9e\x8c\xe3\x35\xfc\x86\xbd\x96\x49\xd7\x5a\x6a\xd1\xd2\x0a\x95\x92\x0d\xc4\xbd\xd4\xb1\x52\x2e\x88\x0b\x00\x8f\x15\x45\x70\x60\x6b\x79\xf8\x67\x6e\x57\x1d\xe9\x2a\x5c\xc2\xc3\x7b\x70\x6d\xc2\xe9\x5b\xd7\x7f\x4d\xf2\x61\xe5\x26\xbf\xb9\xf0\xff\xc2\x59\x93\x0b\x5b\x3c\xd2\x17\x94\x7a\x3d\x77\x76\x75\x73\x03\x2d\x9a\x46\xad\xae\x3e\x71\xaf\x4b\x30\x2c\x3e\xc4\xb3\x08\x33\xe0\xd5\x3a\x78\x8e\xbe\x1c\xdf\x25\xf4\xc5\x2c\x3d\x69\xd4\x4d\x38\xd1\xec\x1d\x9f\xff\x8f\xcc\xed\x1b\x8c\x7e\x8f\xf6\x30\x1d\x74\x26\xd5\x0b\xf9\x0d\xbb\x38\x6b\x7f\xa1\x8c\x26\x90\xee\x11\xf1\xfa\xf5\x8b\x70\xe1\xd0\x48\x5d\x5a\x1c\xe6\x1d\x9e\xce\xf5\xdc\xf6\xe1\x4f\x00\x00\x00\xff\xff\x7d\x72\x30\x6f\x4a\x03\x00\x00"

func TransactionsIdtablestakingDelegationDel_stake_new_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_stake_new_tokensCdc,
		"../../../transactions/idTableStaking/delegation/del_stake_new_tokens.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_stake_new_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_stake_new_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_stake_new_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x53, 0x38, 0xd9, 0x47, 0x24, 0xbb, 0xe8, 0x6e, 0x60, 0xdf, 0x9c, 0x19, 0x3a, 0x3c, 0x47, 0x18, 0xa7, 0xb5, 0x74, 0x88, 0x1d, 0x6, 0xd7, 0xb5, 0x24, 0xc1, 0xa1, 0xd3, 0x49, 0x79, 0xbe, 0x8b}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_stake_rewardedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6b\xab\x50\x10\x85\xf7\xfe\x8a\x21\x8b\x87\xd9\xe8\x5b\x3c\xde\x42\xda\x06\x5b\x13\x08\x84\x50\xa2\x5d\x74\x39\xb9\x8e\x89\xcd\xcd\x1d\x99\x8c\x4d\xa0\xe4\xbf\x97\x5b\xab\xb4\x54\xe8\x6c\x06\xf1\xce\x9c\xef\x9c\xa9\x8f\x0d\x8b\xc2\xc2\xf2\x79\x99\x15\xb8\xb5\x94\x2b\x1e\x6a\xb7\x83\x4a\xf8\x08\x7f\x2f\xcb\x6c\xbe\x2e\x96\xc5\x73\x91\xde\xaf\xe6\x69\x96\x6d\xe6\x79\x1e\x04\x81\x0a\xba\x13\x1a\xad\xd9\x85\x78\xe4\xd6\x69\x02\x4f\x8b\xfa\xf2\xff\xdf\x14\xde\x82\x00\x00\x20\x8e\x61\xc5\x06\x2d\xbc\xa2\xd4\x7e\x33\x54\x2c\x80\x20\x54\x91\x90\x33\x04\xca\xa0\x7b\x82\x8c\x2c\xed\x50\x59\x80\xb7\x2f\x64\xf4\x63\xda\x92\x42\xd9\xff\xd8\x50\x95\xc0\x9f\x9f\x90\xd1\x9a\x4b\x1a\xc6\x3b\xd9\x46\xa8\x41\xa1\x10\x8d\xd1\x04\xd2\x56\xf7\xa9\x31\x1e\xd0\x83\xc1\x67\xc5\x31\x6c\x59\x84\xcf\x63\x3c\xe5\x18\x8f\xaf\x13\xd9\x2a\xfa\x0a\x05\xb7\xe0\x65\xa2\x6e\xd7\xcd\xaf\x84\x77\xa1\x4f\x35\x19\x89\x3b\x1a\xde\xe4\xca\x82\x3b\x7a\x44\xdd\x4f\x07\x65\x5f\xb3\x19\x34\xe8\x6a\x13\x4e\x1e\xb8\xb5\x25\x38\xd6\xde\xc4\x37\x0b\x03\xe0\x64\xda\x25\x72\xed\x1a\x5d\xc8\xb4\x4a\xfd\x79\x46\x0d\xf5\x1f\xb4\xa1\x33\x4a\x49\x65\xc1\x07\x72\xa7\xe1\xc4\x5d\x1f\xf6\x5e\xdf\x03\x00\x00\xff\xff\x4f\x03\x87\x63\x3f\x02\x00\x00"

func TransactionsIdtablestakingDelegationDel_stake_rewardedCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_stake_rewardedCdc,
		"../../../transactions/idTableStaking/delegation/del_stake_rewarded.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_stake_rewardedCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_stake_rewardedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_stake_rewarded.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0x9f, 0xc3, 0x4b, 0x19, 0xbb, 0xe2, 0x96, 0x5c, 0x6c, 0x69, 0x8b, 0x86, 0x7e, 0xeb, 0x78, 0x72, 0x47, 0xef, 0x12, 0x0, 0xd0, 0x9b, 0x25, 0x23, 0x9a, 0x67, 0x29, 0x3e, 0xa1, 0x89, 0x59}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_stake_unlockedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x31\x6b\xe3\x40\x10\x85\x7b\xfd\x8a\x87\x8b\x43\x6e\xa4\x2b\x8e\x2b\xc4\x5d\x8c\x12\xd9\x60\x30\x26\x58\x72\x91\x72\xbd\x1a\xd9\x8a\xd7\x3b\x62\x3d\x8a\x0d\xc1\xff\x3d\x6c\x14\x89\x84\x08\x32\xcd\x20\xb4\x33\xef\x7b\x6f\xea\x53\xc3\x4e\xb0\x30\x7c\x59\x66\x85\xda\x19\xca\x45\x1d\x6b\xbb\x47\xe5\xf8\x84\xdf\xd7\x65\x36\x5f\x17\xcb\xe2\xa9\x48\xef\x57\xf3\x34\xcb\x36\xf3\x3c\x0f\x82\x40\x9c\xb2\x67\xa5\xa5\x66\x1b\xaa\x13\xb7\x56\x12\x6c\x17\xf5\xf5\xef\x9f\x29\x5e\x83\x00\x00\xe2\x18\x2b\xd6\xca\xe0\x45\xb9\xda\x6f\x46\xc5\x0e\x0a\x8e\x2a\x72\x64\x35\x41\x18\x72\x20\x64\x64\x68\xaf\x84\x1d\x78\xf7\x4c\x5a\xde\xa7\x0d\x09\xca\xfe\xc7\x86\xaa\x04\xbf\xbe\x43\x46\x6b\x2e\x69\x18\xef\x64\x1b\x47\x8d\x72\x14\x2a\xad\x25\x41\xda\xca\x21\xd5\xda\x03\x7a\x30\x7c\x54\x1c\x63\xc7\xce\xf1\x65\x8c\xa7\x1c\xe3\xf1\x75\x26\x53\x45\x9f\xa1\xf0\x1f\x5e\x26\xea\x76\xfd\xfb\x91\xf0\x2e\xf4\xa9\x26\x23\x71\x47\xc3\x9b\x5c\xd8\xa9\x3d\x3d\x2a\x39\x4c\x07\x65\x5f\xb3\x19\x1a\x65\x6b\x1d\x4e\x1e\xb8\x35\x25\x2c\x4b\x6f\xe2\x8b\x85\x01\x70\x32\xed\x12\xb9\x75\x8d\xae\xa4\x5b\xa1\xfe\x3c\xa3\x86\xfa\x0f\xda\x5a\xc3\xfa\x48\x65\xc1\x47\xb2\xe7\xe1\xc4\x5d\x1f\xf6\xde\xde\x02\x00\x00\xff\xff\x21\x2e\xd3\x76\x3f\x02\x00\x00"

func TransactionsIdtablestakingDelegationDel_stake_unlockedCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_stake_unlockedCdc,
		"../../../transactions/idTableStaking/delegation/del_stake_unlocked.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_stake_unlockedCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_stake_unlockedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_stake_unlocked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0xe4, 0xdc, 0xe9, 0xa1, 0x7, 0x53, 0xe2, 0xe1, 0xa6, 0xbb, 0x19, 0x89, 0x88, 0x10, 0x66, 0xab, 0x89, 0x41, 0x71, 0x13, 0xa3, 0xad, 0x92, 0x9e, 0x83, 0x20, 0x6c, 0xc7, 0xa6, 0x2f, 0x27}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_withdraw_reward_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\xd3\x30\x10\x85\xef\xf9\x15\xa3\x3d\xa0\xf6\x40\xc2\x01\x71\xa8\x16\x56\x85\xb4\x52\x45\xd5\x45\x6d\x00\x71\x9c\xda\x93\xd6\xac\xeb\x89\x9c\x09\xa9\x84\xf6\xbf\x23\x27\x75\x36\xab\xad\x04\x62\x2e\x56\xe4\xf7\x32\xdf\x1b\x8f\x39\x55\xec\x05\x96\x96\xdb\x55\x5e\xe0\xde\xd2\x4e\xf0\xc1\xb8\x03\x94\x9e\x4f\xf0\xe6\xbc\xca\x17\x9b\x62\x55\xfc\x28\xe6\x1f\xd7\x8b\x79\x9e\x6f\x17\xbb\x5d\x32\x72\x15\xfc\x40\x2e\x8a\x97\xeb\xfb\xef\xc5\xfd\xe7\xc5\x26\x0a\x93\x44\x3c\xba\x1a\x95\x18\x76\x13\x3c\x71\xe3\x64\x06\x5f\x97\xe6\xfc\xee\xed\x14\x7e\x27\x09\x00\x40\x96\xc1\x9a\x15\x5a\xf8\x85\xde\x04\x04\x28\xd9\x03\x82\xa7\x92\x3c\x39\x45\x20\x0c\x72\x24\xd0\x64\xe9\x80\xc2\x1e\x78\xff\x93\x94\x74\x6e\x4b\xf2\x74\xb1\xa5\x72\x06\xaf\x5e\xa6\x49\x37\xac\x29\x8f\xaa\x64\x30\x96\x31\xc1\x93\xb1\xfb\x4c\xbf\x61\x63\xa5\xd7\x55\x9e\x2a\xf4\x34\x41\xa5\x64\x06\xf3\x46\x8e\x73\xa5\x42\x90\x10\x00\x2e\x95\x65\xb0\x67\xef\xb9\xfd\x67\xee\x50\x35\xd9\x32\x1d\xc3\xc3\x7b\x08\x6d\xd2\xfe\x5f\xb7\x7f\x4d\xf2\x61\x12\x26\x3f\xbb\xf2\x7e\xe9\xa0\xd9\x09\x7b\x3c\xd0\x17\x94\xe3\x74\xe8\x1c\xea\xee\x0e\x2a\x74\x46\x4d\x6e\x3e\x71\x63\x35\x38\x96\x18\xe2\x59\x84\xfa\xb2\x11\xa8\x4f\xc6\xdd\x4c\x93\xe7\xf8\xe3\x11\x5e\xc3\x1f\xcd\x33\xd2\x66\x75\x8f\x94\x0d\xde\xee\xfa\xff\xe8\xc2\xce\x41\xe7\x8f\x68\x8f\xfd\x41\x67\x52\x8d\x50\xdc\xb2\xab\xc0\xa9\xa6\x8a\x6b\x23\x17\xb0\xdb\xd7\x2f\x5e\x24\x6d\x8d\x1c\xb5\xc7\x76\x4b\x2d\x7a\x4d\xba\xb3\xd6\xc3\x2e\xf7\xe7\x74\x68\xfd\xf8\x27\x00\x00\xff\xff\x48\xa4\x68\x6b\x52\x03\x00\x00"

func TransactionsIdtablestakingDelegationDel_withdraw_reward_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_withdraw_reward_tokensCdc,
		"../../../transactions/idTableStaking/delegation/del_withdraw_reward_tokens.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_withdraw_reward_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_withdraw_reward_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_withdraw_reward_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0x52, 0x4d, 0x97, 0xb1, 0xb9, 0xbc, 0x88, 0xbd, 0xa4, 0x74, 0x59, 0xab, 0xf1, 0x25, 0x8a, 0x1c, 0x55, 0x41, 0x8e, 0x6b, 0x4d, 0x3c, 0xfe, 0x4c, 0xb6, 0xdb, 0x88, 0xd3, 0xa9, 0xbf, 0x50}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationDel_withdraw_unlocked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x6b\xdb\x40\x10\x85\xef\xfa\x15\x43\x0e\xc5\x3e\x54\xea\xa1\xf4\x60\xd2\x06\xb7\xb2\xc1\xd4\x38\x25\x56\x5a\x7a\x1c\xaf\x46\xf6\xd6\xab\x1d\xb1\x1a\x55\x86\x92\xff\x5e\x56\xf2\x2a\x0a\x36\xb4\x64\x2e\x8b\xd8\xf7\x34\xdf\x9b\x1d\x5d\x56\xec\x04\x96\x86\xdb\x55\x9a\xe1\xce\xd0\x56\xf0\xa8\xed\x1e\x0a\xc7\x25\xbc\x3b\xad\xd2\xc5\x26\x5b\x65\x3f\xb3\xf9\xe7\xf5\x62\x9e\xa6\x0f\x8b\xed\x36\x1a\xb9\x32\x3e\x92\x0d\xe2\xe5\xfa\xfe\x47\x76\xff\x75\xb1\x09\xc2\x28\x12\x87\xb6\x46\x25\x9a\xed\x04\x4b\x6e\xac\xcc\xe0\x71\xa9\x4f\x1f\xde\x4f\xe1\x4f\x14\x01\x00\x24\x09\xac\x59\xa1\x81\xdf\xe8\xb4\x47\x80\x82\x1d\x20\x38\x2a\xc8\x91\x55\x04\xc2\x20\x07\x82\x9c\x0c\xed\x51\xd8\x01\xef\x7e\x91\x92\xce\x6d\x48\x9e\x2f\x1e\xa8\x98\xc1\x9b\xcb\x34\xf1\x86\x73\x4a\x83\x2a\x1a\x8c\x45\x48\xf0\x6c\xec\x3e\xe3\xef\xd8\x18\xe9\x75\x95\xa3\x0a\x1d\x4d\x50\x29\x99\xc1\xbc\x91\xc3\x5c\x29\x1f\xc4\x07\x80\x73\x25\x09\xec\xd8\x39\x6e\xff\x9b\xdb\x57\x4d\xa6\x88\xc7\xf0\xf0\x11\x7c\x9b\xb8\xff\xd7\xed\x3f\x93\x7c\x9a\xf8\xc9\xcf\xae\xbc\x5f\x3c\x68\xb6\xc2\x0e\xf7\xf4\x0d\xe5\x30\x1d\x3a\xfb\xba\xbb\x83\x0a\xad\x56\x93\x9b\x2f\xdc\x98\x1c\x2c\x4b\x08\xf1\x22\x42\x7d\xde\x08\xcc\x4b\x6d\x6f\xa6\xd1\x4b\xfc\xf1\x08\xaf\xe1\x8f\xe6\x19\x68\x93\xba\x47\x4a\x06\x6f\x77\xfd\x3a\x3a\xbf\x73\xd0\xf9\x03\xda\x53\x7f\xd0\x89\x54\x23\x14\xb6\xec\x2a\x70\x9c\x53\xc5\xb5\x96\x33\xd8\xed\xdb\x8b\x17\x89\x5b\x2d\x87\xdc\x61\xfb\x68\x0d\xab\x23\xe5\x9d\xb5\x1e\x76\xb9\x3f\xa7\x43\xeb\xa7\xbf\x01\x00\x00\xff\xff\x3a\xbc\x77\xc1\x52\x03\x00\x00"

func TransactionsIdtablestakingDelegationDel_withdraw_unlocked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationDel_withdraw_unlocked_tokensCdc,
		"../../../transactions/idTableStaking/delegation/del_withdraw_unlocked_tokens.cdc",
	)
}

func TransactionsIdtablestakingDelegationDel_withdraw_unlocked_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationDel_withdraw_unlocked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/del_withdraw_unlocked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0x17, 0xf6, 0x1b, 0xc5, 0x0, 0xce, 0x87, 0xbc, 0xea, 0xad, 0xf3, 0xad, 0x2e, 0xdc, 0x3a, 0x3c, 0x5a, 0x43, 0x53, 0xea, 0x31, 0xc1, 0xea, 0x2, 0x35, 0x6d, 0x11, 0xa2, 0xc4, 0x54, 0x72}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationGet_delegator_committedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc3\x40\x10\x46\xef\xfb\x2b\x3e\x6f\x16\xc4\x8a\x8a\x87\xde\x5a\x37\x85\x05\xf1\x60\xb6\x07\x8f\x9b\x64\x92\x2e\xcd\xce\x84\xcd\x04\x0b\xe2\x7f\x97\x62\x83\x22\x3d\xce\x63\x3e\xde\x8b\x69\x90\xac\xd8\xf6\xf2\xe1\xac\x0f\x55\x4f\xa5\x86\x43\xe4\x0e\x6d\x96\x84\xbb\xa3\xb3\xc5\xab\x77\xfe\xdd\xaf\x37\x2f\xc5\xda\xda\xb7\xa2\x2c\x8d\x59\x2e\xe1\xf7\x71\xc4\x58\xe7\x38\x28\x32\xe9\x94\x79\x84\xee\x09\x55\xe8\x03\xd7\x04\x69\x51\x4b\x4a\x51\x95\x1a\xa8\x1c\x88\xc7\x13\x0b\x68\xa8\xa7\x2e\xa8\x64\x63\x86\xa9\x42\x3b\x31\x52\x88\x7c\xcd\xd2\x90\xb3\x2b\x94\x9a\x23\x77\x37\xbf\x7f\x27\xb8\x73\xac\x0f\xf7\x8b\x15\x76\xdb\x78\x7c\x7a\xc4\xa7\x01\x70\xf6\x5e\xa8\xbf\xed\x48\xed\xbc\x7f\x9e\x33\x36\x3f\x69\x67\xd3\x3f\xc3\x9f\x63\x71\x65\xbe\xbe\x03\x00\x00\xff\xff\xc3\xe3\x67\x49\x19\x01\x00\x00"

func TransactionsIdtablestakingDelegationGet_delegator_committedCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationGet_delegator_committedCdc,
		"../../../transactions/idTableStaking/delegation/get_delegator_committed.cdc",
	)
}

func TransactionsIdtablestakingDelegationGet_delegator_committedCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationGet_delegator_committedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/get_delegator_committed.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3, 0xf5, 0xf9, 0x9b, 0xe9, 0xcf, 0x6b, 0x75, 0xd8, 0x3, 0xa0, 0x7c, 0x2f, 0x3a, 0xcd, 0x33, 0xaa, 0xb2, 0x35, 0x2b, 0x19, 0xc0, 0xe5, 0xc6, 0x1f, 0x99, 0x95, 0x67, 0xc5, 0xc5, 0xd2, 0x20}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationGet_delegator_requestCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\xcf\x9b\x0b\xe2\x8a\x8a\x87\xbd\xad\xa4\x0b\x01\xf1\xb0\x4d\x0f\x1e\xd3\xed\xb4\x1b\x4c\x27\x35\x99\xe0\x82\xf8\xdf\x45\x6c\x51\x64\x8f\x33\xbc\xf7\xbe\xcf\x8f\x53\x4c\x82\x5d\x88\xef\x46\x5b\xd7\x06\xaa\xc5\xbd\x7a\x1e\xd0\xa7\x38\xe2\xe6\x64\x74\xf5\x6c\x8d\x7d\xb1\xdb\xc7\xa7\x6a\xab\xf5\xbe\xaa\x6b\xa5\xd6\x6b\xd8\xa3\xcf\xc8\x87\xe4\x27\x41\x22\x29\x89\x33\xe4\x48\x48\xf4\x56\x28\x0b\x75\x28\x9c\xe7\xad\xd6\x05\xc7\x07\x42\xec\xe1\xd0\x51\xa0\xc1\x49\x4c\x4a\x4d\xa5\x45\x5f\x18\xa3\xf3\x7c\xc9\xb1\x23\xa3\x37\xa8\x25\x79\x1e\xae\x7e\x73\xdf\xcf\xc6\xb0\xdc\xdd\xae\x36\x68\x76\xfe\xf4\x70\x8f\x0f\x05\x60\xe6\x9e\xb1\xbf\x1e\x48\xf4\xd2\x6f\x16\x8f\xfd\x8f\xda\x4c\xfa\x47\xf8\x73\xac\x2e\xd4\xe7\x57\x00\x00\x00\xff\xff\x64\xd5\x12\x79\x19\x01\x00\x00"

func TransactionsIdtablestakingDelegationGet_delegator_requestCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationGet_delegator_requestCdc,
		"../../../transactions/idTableStaking/delegation/get_delegator_request.cdc",
	)
}

func TransactionsIdtablestakingDelegationGet_delegator_requestCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationGet_delegator_requestCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/get_delegator_request.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0xc3, 0xec, 0x4c, 0x57, 0x75, 0x47, 0x33, 0xc7, 0x9b, 0xcc, 0xf1, 0x8a, 0xe3, 0x66, 0x27, 0xff, 0xd5, 0x4a, 0x77, 0x51, 0xdd, 0x13, 0xb7, 0x2c, 0xcb, 0x28, 0x43, 0x5e, 0xf2, 0xf, 0x45}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationGet_delegator_rewardedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc3\x40\x10\x46\xef\xfb\x2b\x3e\x6f\x16\xc4\x8a\x8a\x87\xde\x5a\x36\x85\x05\xf1\xd0\x6c\x0f\x1e\x37\xcd\x24\x5d\x9a\xcc\x86\xd9\x09\x2d\x88\xff\x5d\x82\x11\x45\x7a\x9c\xc7\x7c\xbc\x17\xfb\x21\x89\x62\xdb\xa5\xb3\xb3\x3e\x54\x1d\x95\x1a\x4e\x91\x5b\x34\x92\x7a\x3c\x5c\x9c\x2d\xde\xbc\xf3\xef\x7e\xbd\x79\x2d\xd6\xd6\xee\x8a\xb2\x34\x66\xb9\x84\x3f\xc6\x8c\x7c\x90\x38\x28\x84\x74\x14\xce\xd0\x23\xa1\x0a\x5d\xe0\x03\x21\x35\x10\x3a\x07\xa9\xa9\x86\xa6\x13\x71\x9e\x50\x40\x4d\x1d\xb5\x41\x93\x18\x33\x8c\x15\x9a\x91\xd1\x87\xc8\xb7\x9c\x6a\x72\x76\x85\x52\x25\x72\x7b\xf7\xfb\x37\xc1\xbd\x63\x7d\x7a\x5c\xac\xb0\xdf\xc6\xcb\xcb\x33\x3e\x0c\x80\x59\x7b\x25\xfe\xbe\x25\xb5\x3f\xfb\xdd\x5c\xb1\xf9\x0e\x9b\x45\xff\x04\x7f\x8e\xc5\x8d\xf9\xfc\x0a\x00\x00\xff\xff\x15\x76\xcb\xe4\x17\x01\x00\x00"

func TransactionsIdtablestakingDelegationGet_delegator_rewardedCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationGet_delegator_rewardedCdc,
		"../../../transactions/idTableStaking/delegation/get_delegator_rewarded.cdc",
	)
}

func TransactionsIdtablestakingDelegationGet_delegator_rewardedCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationGet_delegator_rewardedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/get_delegator_rewarded.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x56, 0x8f, 0x82, 0x46, 0xf6, 0x64, 0xee, 0xf6, 0xd9, 0x3c, 0x5a, 0x13, 0x6b, 0x96, 0x49, 0xf3, 0xb2, 0xba, 0x9c, 0xfb, 0x11, 0xa9, 0x60, 0xae, 0xb6, 0xd8, 0x75, 0x50, 0xc1, 0xb5, 0x4a, 0xc1}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationGet_delegator_stakedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc3\x40\x10\x46\xef\xfb\x2b\x3e\x6f\x16\xc4\x8a\x8a\x87\xde\x5a\x36\x85\x05\xf1\xe0\x6e\x0f\x1e\x27\xcd\x24\x5d\x92\xcc\x86\xdd\x09\x16\xc4\xff\x2e\xd5\x8a\x22\x1e\xe7\x31\x33\xef\xc5\x71\x4a\x59\xb1\x1d\xd2\xab\xb3\x81\xea\x81\xbd\x52\x1f\xa5\x43\x9b\xd3\x88\x9b\xa3\xb3\xd5\x53\x70\xe1\x25\xac\x37\x8f\xd5\xda\xda\xe7\xca\x7b\x63\x96\x4b\x84\x43\x2c\x28\xfb\x1c\x27\x45\x66\x9d\xb3\x14\xe8\x81\x51\xd3\x40\xb2\x67\xa4\x16\x45\xa9\xe7\x06\x9a\x7a\x96\x72\x02\x84\x86\x07\xee\x48\x53\x36\x66\x9a\x6b\xb4\xb3\x60\xa4\x28\x97\x92\x1a\x76\x76\x05\xaf\x39\x4a\x77\xf5\xb3\x77\x82\x3b\x27\x7a\x77\xbb\x58\x61\xb7\x8d\xc7\x87\x7b\xbc\x19\x00\x67\xe9\x3f\xe9\xd7\x1d\xab\xfd\xbe\xf7\x9f\x0d\x9b\xaf\xa8\xb3\xe6\xcf\xfb\x5f\xc3\xe2\xc2\xbc\x7f\x04\x00\x00\xff\xff\x0a\x37\xb1\x15\x13\x01\x00\x00"

func TransactionsIdtablestakingDelegationGet_delegator_stakedCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationGet_delegator_stakedCdc,
		"../../../transactions/idTableStaking/delegation/get_delegator_staked.cdc",
	)
}

func TransactionsIdtablestakingDelegationGet_delegator_stakedCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationGet_delegator_stakedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/get_delegator_staked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x7e, 0x67, 0x8e, 0x4b, 0xe0, 0x1c, 0x3a, 0x13, 0xd8, 0x7b, 0x9b, 0x7, 0x7e, 0xec, 0x7f, 0xad, 0x49, 0x6, 0x7e, 0x70, 0x3f, 0xbf, 0xe0, 0x41, 0x3, 0x68, 0x5, 0x80, 0x53, 0x55, 0xc2}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationGet_delegator_unlockedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc4\x30\x10\x46\xef\xf9\x15\x9f\x37\x17\xc4\x15\x15\x0f\x7b\xdb\x25\x5d\x08\x88\x07\x9b\x1e\x3c\xa6\xed\xb4\x1b\x9a\x4e\x4a\x3a\xc1\x05\xf1\xbf\x4b\xb1\xa2\xc8\x1e\xe7\x31\x1f\xef\xf9\x71\x8a\x49\x70\x0c\xf1\xdd\x68\xeb\xea\x40\xa5\xb8\xc1\x73\x8f\x2e\xc5\x11\x77\x67\xa3\x8b\x17\x6b\xec\x9b\xdd\x1f\x9e\x8b\xbd\xd6\xaf\x45\x59\x2a\xb5\xdd\xc2\x9e\xfc\x8c\xb9\x49\x7e\x12\x24\x92\x9c\x78\x86\x9c\x08\xb5\x0b\x8e\x1b\x42\xec\x90\x39\xc4\x66\xa0\x16\x12\x07\xe2\x79\x41\x0e\x2d\x05\xea\x9d\xc4\xa4\xd4\x94\x6b\x74\x99\x31\x3a\xcf\xd7\x1c\x5b\x32\x7a\x87\x52\x92\xe7\xfe\xe6\xf7\x6f\x81\x95\x61\x79\xb8\xdf\xec\x50\x1d\xfd\xf9\xe9\x11\x1f\x0a\xc0\xaa\xbd\x10\x7f\xdb\x93\xe8\x9f\x7d\xb5\x56\x1c\xbe\xc3\x56\xd1\x3f\xc1\x9f\x63\x73\xa5\x3e\xbf\x02\x00\x00\xff\xff\x2c\x49\xdc\x22\x17\x01\x00\x00"

func TransactionsIdtablestakingDelegationGet_delegator_unlockedCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationGet_delegator_unlockedCdc,
		"../../../transactions/idTableStaking/delegation/get_delegator_unlocked.cdc",
	)
}

func TransactionsIdtablestakingDelegationGet_delegator_unlockedCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationGet_delegator_unlockedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/get_delegator_unlocked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0xda, 0x19, 0x9c, 0xcc, 0x56, 0x98, 0xda, 0xb7, 0x7e, 0xf6, 0x82, 0x72, 0xaa, 0x78, 0x3e, 0x86, 0x3, 0xe7, 0xc7, 0x59, 0xeb, 0x8a, 0xa, 0x52, 0x36, 0x39, 0xff, 0x7c, 0x67, 0x82, 0xd7}}
	return a, nil
}

var _TransactionsIdtablestakingDelegationGet_delegator_unstakedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc4\x30\x10\x46\xef\xf9\x15\x9f\x37\x17\xc4\x15\x15\x0f\x7b\xdb\x25\x5d\x08\x88\x07\x93\x1e\x3c\xa6\xdb\x69\x37\xb4\x9d\x94\x64\x82\x0b\xe2\x7f\x97\xd5\x8a\x22\x1e\xe7\x31\x1f\xef\x85\x69\x8e\x49\xb0\x1f\xe3\xab\xd1\xce\x37\x23\x59\xf1\x43\xe0\x1e\x5d\x8a\x13\x6e\x4e\x46\x57\x4f\xce\xb8\x17\xb7\xdd\x3d\x56\x5b\xad\x9f\x2b\x6b\x95\x5a\xaf\xe1\x8e\x21\x23\x1f\x52\x98\x05\x89\xa4\x24\xce\x90\x23\xa1\xf1\xa3\xe7\x03\x21\x76\x28\x9c\xc5\x0f\xd4\x42\xe2\x40\x9c\xcf\xc8\xa3\xa5\x91\x7a\x2f\x31\x29\x35\x97\x06\x5d\x61\x4c\x3e\xf0\x25\xc7\x96\x8c\xde\xc0\x4a\x0a\xdc\x5f\xfd\xfc\x9d\x61\x6d\x58\xee\x6e\x57\x1b\xd4\xfb\x70\x7a\xb8\xc7\x9b\x02\xb0\x68\xff\x89\xbf\xee\x49\xf4\xf7\xbe\x66\xfb\x59\xb1\xfb\x0a\x5b\x44\x7f\x04\xbf\x8e\xd5\x85\x7a\xff\x08\x00\x00\xff\xff\xa4\x0a\x4a\x83\x17\x01\x00\x00"

func TransactionsIdtablestakingDelegationGet_delegator_unstakedCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingDelegationGet_delegator_unstakedCdc,
		"../../../transactions/idTableStaking/delegation/get_delegator_unstaked.cdc",
	)
}

func TransactionsIdtablestakingDelegationGet_delegator_unstakedCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingDelegationGet_delegator_unstakedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/delegation/get_delegator_unstaked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0xb0, 0xb6, 0x83, 0x7a, 0xe3, 0xc6, 0x52, 0xd0, 0xb4, 0xce, 0xc4, 0x94, 0x14, 0xa5, 0xaa, 0xc2, 0xea, 0x38, 0xa3, 0x58, 0xa7, 0xc8, 0x63, 0xe8, 0xd2, 0x87, 0x7c, 0x27, 0xfd, 0xd5, 0x8b}}
	return a, nil
}

var _TransactionsIdtablestakingGet_current_tableCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4a\xc4\x40\x10\x87\xf1\x7e\x9f\xe2\x5f\xde\x35\x9e\xb5\xdd\xc9\x46\x58\x90\x2b\xdc\x6d\x44\x2c\x72\xc9\x64\x33\x98\xcc\x86\xd9\x59\x54\xc4\x77\x97\x80\xe5\x75\x5f\xf5\xe3\xe3\x75\x2b\x6a\x78\x5a\xca\x67\xf0\xa9\xbf\x2e\x14\xad\xff\x60\xc9\x98\xb4\xac\xb8\xff\x0a\xbe\xbb\xa4\x90\x5e\xd3\xf9\xf1\xb9\x3b\x7b\xff\xd2\xc5\xe8\xdc\xe9\x84\x34\x73\x45\x1d\x94\x37\x83\x92\x35\x95\x0a\x9b\x09\x43\x53\x25\x31\xf0\x48\x62\x6c\xdf\xb0\x5d\xc5\x42\x92\x6d\x76\x6e\x6b\x57\x4c\x4d\xb0\xf6\x2c\x87\xe3\x03\xde\xa2\x29\x4b\x7e\xc7\x8f\x03\xf0\x2f\xdd\xf8\xb9\xcb\x64\x7b\xd2\x78\x29\x23\x05\x5f\x0f\x47\xf7\xfb\x17\x00\x00\xff\xff\x4a\xf4\xfe\xa9\xbe\x00\x00\x00"

func TransactionsIdtablestakingGet_current_tableCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_current_tableCdc,
		"../../../transactions/idTableStaking/get_current_table.cdc",
	)
}

func TransactionsIdtablestakingGet_current_tableCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_current_tableCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_current_table.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x58, 0x1e, 0x72, 0x94, 0xe0, 0x76, 0x87, 0xd9, 0x75, 0x4c, 0x72, 0xa3, 0xa1, 0x74, 0x9e, 0xa3, 0x3e, 0x29, 0x8a, 0xe4, 0xeb, 0x5e, 0x72, 0x24, 0x51, 0x5b, 0x77, 0xb4, 0xfb, 0xda, 0xf0, 0x72}}
	return a, nil
}

var _TransactionsIdtablestakingGet_nodetype_ratioCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\x9e\xb7\xf6\x62\x3d\x88\x48\xc1\x43\x25\x29\x04\xc4\x43\xb2\x3d\x88\x78\x98\x34\x93\x76\xc9\x66\x27\xcc\x4e\x68\x41\xfc\xef\xd2\xea\xb1\xd7\xc7\xfb\x3e\xbe\x30\x4e\xa2\x86\x6d\x94\x53\x55\x78\x6a\x23\x37\x46\x43\x48\x07\xf4\x2a\x23\x1e\xce\x55\x51\xbe\xfb\xca\x7f\xf8\xcd\xeb\x5b\xb9\x29\x8a\xba\x6c\x1a\xe7\x56\x2b\xf8\x63\xc8\xc8\x7b\x0d\x93\x41\xd9\x66\x4d\x19\x76\x64\xb4\x14\x29\xed\x19\xd2\x23\x1b\x0d\xdc\xc1\x64\xe0\x94\x2f\x03\x21\x49\xc7\xce\x4d\x73\x8b\x7e\x4e\x18\x29\xa4\x85\x4a\xe4\x35\x76\x55\xb2\xe7\xe5\x1a\xbb\x6d\x38\x3f\x3d\xe2\xdb\x01\x40\x64\x83\x92\x05\xc9\x78\xb9\xd1\x78\x7f\x60\xab\xf9\x44\xda\xd5\xd7\xd3\x62\xe9\xae\xd8\x5f\xce\x3f\xf9\x79\xf1\x7f\xdd\xb9\x9f\xdf\x00\x00\x00\xff\xff\xd9\xe6\xb6\x53\xeb\x00\x00\x00"

func TransactionsIdtablestakingGet_nodetype_ratioCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_nodetype_ratioCdc,
		"../../../transactions/idTableStaking/get_nodeType_ratio.cdc",
	)
}

func TransactionsIdtablestakingGet_nodetype_ratioCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_nodetype_ratioCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_nodeType_ratio.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x27, 0xe6, 0x4, 0x86, 0x23, 0x25, 0x65, 0xf9, 0xf4, 0xdb, 0x7e, 0xdf, 0xf4, 0xcc, 0x96, 0xf1, 0xd7, 0xda, 0xd8, 0x20, 0xa, 0xc1, 0xb, 0x17, 0x4c, 0xf8, 0xb8, 0x4c, 0xfa, 0x5a, 0xf2}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_committedtokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xb1\xd1\x85\x32\x20\x86\x6e\x2d\x4e\xa5\x48\xa8\x03\x31\x03\xa3\xd3\x5c\xd2\x53\xe2\xbb\xc8\xbe\x88\x4a\x88\xef\x8e\x2a\x32\x76\xfd\x0f\xbf\xf7\x38\xcd\x9a\x0d\xc7\x49\xbf\x6b\x1f\x62\x3b\x51\x63\x71\x64\x19\xd0\x67\x4d\x78\xbe\xd6\xbe\x3a\x85\x3a\x7c\x85\xfd\xe1\xbd\xda\x7b\xff\x51\x35\x8d\x73\xdb\x2d\xc2\x85\x0b\xca\x39\xf3\x6c\xc8\x64\x4b\x96\x02\xbb\x10\xda\x38\x45\x39\x13\xb4\x47\xb1\x38\x52\x07\xd3\x91\xa4\xdc\x42\x84\x68\x47\xce\xcd\x4b\x8b\x7e\x11\xa4\xc8\xf2\x78\x4b\xb5\xdf\xa1\xb1\xcc\x32\x6c\x76\xf8\x3c\xf2\xf5\xf5\x05\x3f\x0e\xc0\x4a\xdf\x39\xf8\x34\x90\x9d\xb4\xa3\x37\x4d\x89\xcd\xa8\x3b\xfc\x0f\xaf\xde\xe6\xc1\xfd\xfe\x05\x00\x00\xff\xff\xb2\xba\x73\xd6\xdd\x00\x00\x00"

func TransactionsIdtablestakingGet_node_committedtokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_committedtokensCdc,
		"../../../transactions/idTableStaking/get_node_committedTokens.cdc",
	)
}

func TransactionsIdtablestakingGet_node_committedtokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_committedtokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_committedTokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1a, 0xb5, 0x82, 0x4a, 0x6b, 0x30, 0xc5, 0xd4, 0xdd, 0xb0, 0xe, 0x93, 0xd9, 0xd1, 0xf9, 0x42, 0x0, 0xc1, 0xe9, 0xcb, 0x66, 0x4a, 0x96, 0x3a, 0x8b, 0x15, 0xac, 0x40, 0x1b, 0xdd, 0x82, 0x1e}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_direct_stakedtokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x4f\xc3\x30\x10\x46\x77\xff\x8a\x8f\x8d\x2e\x94\x01\x31\x74\x6b\xe5\x54\xb2\x84\x3a\x60\x33\x30\x3a\xc9\x25\x3d\x25\x39\x47\xf6\x45\x54\x42\xfc\x77\x14\xc8\xd8\xf5\x0d\xef\x3d\x9e\xe6\x94\x15\xe7\x31\x7d\x39\x1b\x62\x3d\x92\xd7\x38\xb0\xf4\xe8\x72\x9a\xf0\x7c\x73\xb6\xba\x04\x17\x3e\xc3\xf1\xf4\x56\x1d\xad\x7d\xaf\xbc\x37\x66\xbf\x47\xb8\x72\x41\x69\x32\xcf\x8a\x4c\xba\x64\x29\xd0\x2b\xa1\x8e\x63\x94\x86\x90\x3a\x14\x8d\x03\xb5\xd0\x34\x90\x94\x15\x44\x48\x6a\xc9\x98\x79\xa9\xd1\x2d\x82\x29\xb2\x3c\xae\xc8\xd9\x03\xbc\x66\x96\x7e\x77\xc0\xc7\x99\x6f\xaf\x2f\xf8\x36\x00\x36\xf5\x9d\xc1\xa7\x9e\xf4\x92\x5a\xb2\x9c\xa9\x51\xff\x97\x3a\xfd\xb7\x37\xe5\xee\xc1\xfc\xfc\x06\x00\x00\xff\xff\x39\x31\xe3\x4a\xe0\x00\x00\x00"

func TransactionsIdtablestakingGet_node_direct_stakedtokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_direct_stakedtokensCdc,
		"../../../transactions/idTableStaking/get_node_direct_stakedTokens.cdc",
	)
}

func TransactionsIdtablestakingGet_node_direct_stakedtokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_direct_stakedtokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_direct_stakedTokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0xfc, 0xf0, 0x9, 0x55, 0xfd, 0x10, 0xaa, 0x56, 0x6, 0x3d, 0xba, 0xcf, 0xd3, 0xe6, 0xeb, 0xc1, 0x2d, 0x3d, 0x73, 0x44, 0x5f, 0x8d, 0x2, 0x95, 0x20, 0xa9, 0x7d, 0x6, 0xc0, 0xf5, 0xdc}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_initial_weightCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\x9e\x37\x0b\xc5\x7a\x10\x0f\xbd\xd5\x26\xd2\x80\xd4\x62\x22\xd2\xdb\x6e\xd3\x4d\x32\x98\xec\x86\xd9\x59\x23\x94\xfe\x77\x59\xcd\xd1\xe3\xc0\x7b\xf3\xbd\x8f\x86\xd1\xb3\xe0\xb9\xf7\x53\x91\x55\xe6\xd4\xdb\x52\xcc\x27\xb9\x16\x0d\xfb\x01\xf7\xdf\x45\x96\xef\xab\xa2\x3a\x56\x9b\xa7\x97\x7c\x93\x65\x6f\x79\x59\x2a\xb5\x5a\xa1\xea\x28\x20\xd4\x4c\xa3\x80\xad\x44\x76\x01\xd2\x59\x90\x23\x21\xd3\x63\xb2\xd4\x76\x02\xdf\xc0\xc0\xf9\xb3\x4d\x9d\xa3\x8f\x18\x62\x10\x34\xd4\xf7\x20\x07\x7d\xc9\x0f\xaf\xdb\xdd\x61\xb7\x29\xf3\xab\xc6\x44\xd2\x21\x05\xf5\x36\x32\x5b\x27\x7a\x09\x7d\x60\xfb\x45\x3e\x06\xbd\x84\xe7\x74\xfa\xd1\x07\x7b\x9e\xd3\x09\x59\x7b\x66\x5b\x0b\xc6\xce\x04\xab\xd4\x18\x4f\x68\xa2\xc3\x60\xc8\xdd\x26\x74\x91\xad\x51\x0a\x93\x6b\x17\x6b\xbc\x17\x4e\x1e\x1f\x70\x51\x00\xe6\xe1\xff\xe8\xdf\xb5\x56\xf6\xa9\xfa\x67\xf3\xf1\x2b\x33\x3f\x5b\xdc\xa8\xeb\x4f\x00\x00\x00\xff\xff\x82\xf4\xd6\x5d\x38\x01\x00\x00"

func TransactionsIdtablestakingGet_node_initial_weightCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_initial_weightCdc,
		"../../../transactions/idTableStaking/get_node_initial_weight.cdc",
	)
}

func TransactionsIdtablestakingGet_node_initial_weightCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_initial_weightCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_initial_weight.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x84, 0x67, 0x8b, 0xc1, 0xc, 0x73, 0x6e, 0x42, 0x81, 0x14, 0x4, 0x27, 0xf6, 0x80, 0x1f, 0x1f, 0x88, 0x4c, 0xf9, 0xa4, 0x97, 0x61, 0xd6, 0xdf, 0xe4, 0x98, 0x2, 0xa3, 0x22, 0xb2, 0x11, 0x12}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_networking_addrCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x4f\x83\x40\x10\x85\xef\xfb\x2b\x9e\x37\x9b\x34\xd6\xb3\x37\x2c\x98\x92\x98\xda\x08\x97\xde\x96\xc2\x00\x1b\x61\x87\xcc\xce\x8a\x49\xd3\xff\x6e\x30\xe8\xc9\xdb\x4c\xf2\xe6\xbd\xf9\x9e\x1b\x27\x16\xc5\xcb\xc0\x73\x9e\x96\xd5\x65\xa0\x42\xab\x0f\xe7\x3b\xb4\xc2\x23\x1e\xbf\xf2\x34\x3b\x96\x79\x79\x2e\x93\xe7\xd7\x2c\x49\xd3\xf7\xac\x28\x8c\xd9\xed\x50\xf6\x2e\x20\xd4\xe2\x26\x85\x90\x46\xf1\x01\xda\x13\x3c\xe9\xcc\xf2\x63\x91\x34\x8d\x50\x08\xe0\x16\x15\x3c\x37\xb4\xdc\x9d\x39\x62\x8c\x41\xd1\xba\x61\x80\xf3\xb0\xd7\xec\xf4\xb6\x3f\x9c\x0e\x49\x91\xdd\x2c\x66\xa7\x3d\x16\xa1\xdd\x47\x11\xf2\x6a\xb7\xb0\x27\xa1\x4f\xc7\x31\xd8\x2d\x58\x96\x95\x27\x0e\xd4\xac\xea\x25\xb6\x66\x11\xaa\x15\x53\x5f\x05\x32\x66\x8a\x17\xb4\xd1\x63\xac\x9c\xbf\x5f\xa2\xf3\xf4\x09\x85\x8a\xf3\xdd\xe6\x77\xc0\xd5\x00\x58\x9f\xff\xa7\x82\x87\x8e\xf4\xc8\x0d\x1d\xff\x88\x56\xa0\xd5\x70\x73\x67\x6e\xdf\x01\x00\x00\xff\xff\xd8\xea\x13\x5d\x40\x01\x00\x00"

func TransactionsIdtablestakingGet_node_networking_addrCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_networking_addrCdc,
		"../../../transactions/idTableStaking/get_node_networking_addr.cdc",
	)
}

func TransactionsIdtablestakingGet_node_networking_addrCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_networking_addrCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_networking_addr.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x62, 0xd9, 0xde, 0xbe, 0x23, 0xa2, 0x9d, 0x42, 0x34, 0xc2, 0xe9, 0x1c, 0x76, 0xb7, 0xdb, 0x7, 0xef, 0x5e, 0xe5, 0xcf, 0x58, 0x5b, 0xd1, 0xb2, 0xfc, 0xb2, 0x22, 0x41, 0x92, 0x93, 0x78}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_networking_keyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4f\x83\x40\x10\x85\xef\xfb\x2b\x9e\x37\x9b\x34\xd6\xb3\xb7\x5a\x30\x25\x9a\xda\x08\x97\xde\x96\x96\x01\x36\x85\x1d\x32\x3b\x2b\x36\x4d\xff\xbb\xc1\xa0\x27\x6f\x33\xc9\x9b\xf7\xcd\xe7\xfa\x81\x45\xf1\xd2\xf1\x98\x25\x45\x79\xec\x28\xd7\xf2\xec\x7c\x83\x5a\xb8\xc7\xe3\x57\x96\xa4\xbb\x22\x2b\x0e\xc5\xfa\xf9\x2d\x5d\x27\xc9\x47\x9a\xe7\xc6\xac\x56\x28\x5a\x17\x10\x4e\xe2\x06\x85\x90\x46\xf1\x01\xda\x12\x3c\xe9\xc8\xf2\x53\x71\xa6\x0b\xb8\x46\x09\xcf\x15\x4d\x37\x07\x8e\xe8\x63\x50\xd4\xae\xeb\xe0\x3c\xec\x35\xdd\xbf\x6f\xb6\xfb\xed\x3a\x4f\x6f\x16\xa3\xd3\x16\x53\xd0\x6e\xa2\x08\x79\xb5\x4b\xd8\xbd\xd0\xa7\xe3\x18\xec\x12\x2c\xd3\xca\x03\x07\xaa\xe6\xf4\x84\x3c\xb1\x08\x9d\x14\x43\x5b\x06\x32\x66\x88\x47\xd4\xd1\xa3\x2f\x9d\xbf\x9f\xd0\x59\xf2\x84\x5c\xc5\xf9\x66\xf1\x3b\xe0\x6a\x00\xcc\x8f\xff\xa3\xff\xd0\x90\xee\xb8\xa2\xdd\x9f\xcd\x2b\x5d\xe6\xb2\xc5\x9d\xb9\x7d\x07\x00\x00\xff\xff\x52\xe7\xb3\x26\x38\x01\x00\x00"

func TransactionsIdtablestakingGet_node_networking_keyCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_networking_keyCdc,
		"../../../transactions/idTableStaking/get_node_networking_key.cdc",
	)
}

func TransactionsIdtablestakingGet_node_networking_keyCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_networking_keyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_networking_key.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3, 0xf, 0x46, 0xf2, 0xe1, 0xaf, 0x9f, 0x12, 0x37, 0x8, 0x2e, 0xfa, 0xa0, 0xa1, 0xaf, 0x54, 0x9d, 0x13, 0xb1, 0x41, 0xea, 0x44, 0x2a, 0x7a, 0xf3, 0x91, 0x98, 0xf6, 0x9f, 0x9b, 0x4c, 0x25}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_rewardedtokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\xaf\x5b\xb3\x34\x1d\x4a\x87\x6c\x09\x72\x40\x50\x32\x44\xea\xd0\x51\x8e\xce\x8e\x88\x7d\x32\xa7\x33\x09\x94\xfe\xf7\x62\xea\xb1\xeb\x1b\xde\x7b\x79\x9c\x8a\x28\x8e\x43\xb9\x3b\x1b\x62\x3b\x90\xd7\x78\xcb\xdc\xa3\x93\x32\xe2\xf5\xe1\x6c\x73\x0a\x2e\x7c\x85\xfd\xe1\xa3\xd9\x5b\x7b\x6e\xbc\x37\x66\xbb\x45\xb8\xe6\x8a\x7a\x91\x3c\x29\x84\x74\x16\xae\xd0\x2b\xa1\x8d\x43\xe4\x0b\xa1\x74\x10\xba\x47\x49\x94\xa0\xe5\x46\x5c\x17\x14\xc1\x25\x91\x31\xd3\xdc\xa2\x9b\x19\x63\xcc\xfc\xbc\x20\x67\x77\xf0\x2a\x99\xfb\xcd\x0e\x9f\xc7\xfc\x78\x7f\xc3\xb7\x01\xb0\xca\xff\x59\x7c\xe9\x49\x4f\x25\xd1\x79\xcd\x1c\xfe\xca\xab\x6e\xf3\x64\x7e\x7e\x03\x00\x00\xff\xff\x43\xe7\x63\x4b\xde\x00\x00\x00"

func TransactionsIdtablestakingGet_node_rewardedtokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_rewardedtokensCdc,
		"../../../transactions/idTableStaking/get_node_rewardedTokens.cdc",
	)
}

func TransactionsIdtablestakingGet_node_rewardedtokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_rewardedtokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_rewardedTokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0xdd, 0xd0, 0x74, 0x29, 0x8e, 0x5, 0xc4, 0xb7, 0x37, 0x4, 0xf1, 0xa3, 0xc1, 0x72, 0x6a, 0xed, 0x25, 0xcb, 0xd2, 0xaa, 0x52, 0xb4, 0x9b, 0x6, 0xeb, 0xd7, 0x5e, 0x4b, 0xed, 0xdf, 0xcf}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_roleCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6a\xf3\x40\x10\x84\xfb\x7b\x8a\xf9\xbb\xdf\x60\xe2\x94\xc1\x9d\x63\x29\x58\x10\x1c\x63\x29\x85\xbb\x93\xa5\x95\x74\xe4\x74\x2b\xf6\xf6\xe2\x80\xf1\xbb\x07\x81\xca\x94\x03\x1f\xf3\xcd\xb8\x71\x62\x51\xbc\x79\xbe\x15\x59\x55\x5f\x3d\x95\x5a\x7f\xb9\xd0\xa3\x13\x1e\xf1\xfc\x53\x64\xf9\xb1\x2a\xaa\x4b\xb5\x7b\x7d\xcf\x77\x59\x76\xce\xcb\xd2\x98\xcd\x06\xd5\xe0\x22\x62\x23\x6e\x52\x08\x69\x92\x10\xa1\x03\x41\xd8\x13\xb8\x43\x8d\xc0\x2d\xcd\xe4\x85\x13\xc6\x14\x15\x9d\xf3\x1e\x2e\xc0\xde\xf3\xd3\xc7\xfe\x70\x3a\xec\xca\xfc\x61\x71\x73\x3a\x60\x06\xed\x3e\x89\x50\x50\xbb\x86\x3d\x09\x7d\x3b\x4e\xd1\xae\xc1\x32\x47\x9e\x38\x52\xbb\xd0\xb3\xa8\x61\x11\x6a\x14\xd3\x50\x47\x32\x66\x4a\x57\x74\x29\x60\xac\x5d\xf8\x3f\xab\x8b\x6c\x8b\x52\xc5\x85\x7e\xb5\xc5\x67\x11\xf4\x05\x77\x03\x60\x59\xfb\xc7\xe7\xa7\x9e\xf4\xc8\x2d\x9d\xd9\xd3\x52\xb1\xfa\x67\x1e\xbf\x01\x00\x00\xff\xff\x81\xab\xc1\x7b\x24\x01\x00\x00"

func TransactionsIdtablestakingGet_node_roleCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_roleCdc,
		"../../../transactions/idTableStaking/get_node_role.cdc",
	)
}

func TransactionsIdtablestakingGet_node_roleCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_roleCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_role.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8d, 0xf8, 0x70, 0xe9, 0xec, 0x48, 0x96, 0x8f, 0x79, 0x1b, 0xfd, 0xe6, 0x49, 0xe7, 0x8d, 0x65, 0xed, 0xf2, 0x1b, 0x43, 0xad, 0xbb, 0x3d, 0xf7, 0xd3, 0xa0, 0x8b, 0xdb, 0x90, 0x7e, 0xdc, 0xc8}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_stakedtokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x4e\xc3\x30\x14\x45\x77\x7f\xc5\x65\xa3\x0b\x65\x40\x0c\xdd\x5a\x39\x95\x2c\xa1\x0e\xd8\x0c\x8c\x4e\xfc\x92\x58\x49\x9e\x23\xfb\x45\x44\x42\xfc\x3b\x0a\x64\xec\x78\xcf\x70\xee\x89\xd3\x9c\xb2\xe0\x3a\xa6\x2f\xa3\x9d\xaf\x47\xb2\xe2\x87\xc8\x1d\xda\x9c\x26\x3c\xaf\x46\x57\x37\x67\xdc\xa7\x3b\x5f\xde\xaa\xb3\xd6\xef\x95\xb5\x4a\x1d\x8f\x70\x7d\x2c\x28\x4d\x8e\xb3\x20\x93\x2c\x99\x0b\xa4\x27\xd4\x7e\xf4\xdc\x10\x52\x8b\x22\x7e\xa0\x00\x49\x03\x71\xd9\x80\x07\xa7\x40\x4a\xcd\x4b\x8d\x76\x61\x4c\x3e\xf2\xe3\x86\x8c\x3e\xc1\x4a\x8e\xdc\x1d\x4e\xf8\xb8\xc6\xf5\xf5\x05\xdf\x0a\xc0\xae\xbe\x13\xf8\xd4\x91\xdc\x52\xf8\x9b\x14\x2e\xff\xaf\xbb\xec\xf0\xa0\x7e\x7e\x03\x00\x00\xff\xff\xf2\x6b\x1f\x35\xda\x00\x00\x00"

func TransactionsIdtablestakingGet_node_stakedtokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_stakedtokensCdc,
		"../../../transactions/idTableStaking/get_node_stakedTokens.cdc",
	)
}

func TransactionsIdtablestakingGet_node_stakedtokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_stakedtokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_stakedTokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x39, 0x74, 0xef, 0x7b, 0xc8, 0xb5, 0x2c, 0x41, 0x9, 0x5, 0xa1, 0xbf, 0xb0, 0x67, 0xbc, 0x9c, 0x30, 0x7e, 0xfa, 0x1, 0xff, 0xd8, 0x14, 0x93, 0x65, 0xb7, 0x67, 0x89, 0xa0, 0x2, 0xce, 0x89}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_staking_keyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xab\x40\x10\x45\xfb\xfd\x8a\xfb\xba\x67\xc9\x8a\x53\xa7\x73\x0c\x91\x91\x23\x07\x05\x1a\x77\x8b\x61\x80\x55\x60\x07\xcd\xce\xc6\xb1\x2c\xff\x7b\x84\x84\xbb\x74\x73\xa5\x7b\xe6\xcc\xb8\x71\x62\x51\xbc\x0d\x7c\xc9\x92\xb2\x3a\x0f\x54\x68\xf5\xe5\x7c\x87\x56\x78\xc4\xf3\x4f\x96\xa4\xc7\x32\x2b\x4f\xe5\xf6\xf5\x3d\xdd\x26\xc9\x67\x5a\x14\xc6\x6c\x36\x28\x7b\x17\x10\x6a\x71\x93\x42\x48\xa3\xf8\x00\xed\x09\x61\xe1\x0f\x74\x05\xb7\xa8\xe0\xb9\xa1\x19\x38\x71\xc4\x18\x83\xa2\x75\xc3\x00\xe7\x61\x6f\x69\xfe\xb1\xdb\xe7\xfb\x6d\x91\xde\x2d\x2e\x4e\x7b\xcc\x45\xbb\x8b\x22\xe4\xd5\xae\x61\x73\xa1\x6f\xc7\x31\xd8\x35\x58\xe6\xc8\x13\x07\x6a\x96\xf6\xec\xab\x59\x84\x6a\xc5\xd4\x57\x81\x8c\x99\xe2\x19\x6d\xf4\x18\x2b\xe7\xff\xcf\xea\x2c\x79\x41\xa1\xe2\x7c\xb7\x7a\x0c\xb8\x19\x00\xcb\xd5\x7f\xfc\xfe\xd4\x91\x1e\xb9\x79\xc4\x03\x5d\x97\x4d\xab\x7f\xe6\xfe\x1b\x00\x00\xff\xff\x77\x6b\x35\xaa\x32\x01\x00\x00"

func TransactionsIdtablestakingGet_node_staking_keyCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_staking_keyCdc,
		"../../../transactions/idTableStaking/get_node_staking_key.cdc",
	)
}

func TransactionsIdtablestakingGet_node_staking_keyCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_staking_keyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_staking_key.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0x88, 0x4f, 0xb, 0xc, 0x7a, 0x5f, 0xfe, 0x6f, 0x1e, 0x80, 0xba, 0x10, 0xe2, 0xf0, 0x4d, 0x7b, 0x56, 0xcf, 0x4b, 0xe5, 0x88, 0x42, 0xa9, 0x99, 0x7d, 0x7f, 0x7f, 0x1b, 0xbd, 0xd9, 0x3a}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_total_commitmentCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\x8d\x74\xa1\x0c\x88\xa1\x5b\x8b\x53\x29\x12\x62\x20\x66\x60\x74\x9a\x4b\x7a\x8a\x7d\x17\xd9\x17\x51\x09\xf1\xdd\x51\x45\xc7\xae\xff\xe1\xf7\x1e\xe7\x45\x8b\xe1\x98\xf4\xbb\xf5\x21\xf6\x89\x3a\x8b\x33\xcb\x84\xb1\x68\xc6\xd3\xa5\xf5\xcd\x7b\x68\xc3\x57\xd8\x1f\xde\x9a\xbd\xf7\x1f\x4d\xd7\x39\xb7\xdd\x22\x9c\xb9\xa2\x9e\x0a\x2f\x86\x42\xb6\x16\xa9\xb0\x33\xa1\x8f\x29\xca\x89\xa0\x23\xaa\xc5\x99\x06\x98\xce\x24\xf5\x1a\x22\x44\x07\x72\x6e\x59\x7b\x8c\xab\x20\x47\x96\x87\x6b\x6a\xfd\x0e\x9d\x15\x96\x69\xb3\xc3\xe7\x91\x2f\x2f\xcf\xf8\x71\x00\x6e\xf4\x9d\x83\x8f\x13\x59\x50\x8b\xe9\x55\x73\x66\x33\x1a\x0e\xff\xcb\x37\x70\xe3\x7e\xff\x02\x00\x00\xff\xff\x3a\x6b\x0d\x1f\xdd\x00\x00\x00"

func TransactionsIdtablestakingGet_node_total_commitmentCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_total_commitmentCdc,
		"../../../transactions/idTableStaking/get_node_total_commitment.cdc",
	)
}

func TransactionsIdtablestakingGet_node_total_commitmentCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_total_commitmentCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_total_commitment.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0x46, 0x91, 0x75, 0xb2, 0xa5, 0x71, 0xf8, 0xe0, 0xb8, 0x50, 0x46, 0x13, 0x27, 0xb0, 0x8d, 0xa3, 0x94, 0x7f, 0xa, 0xde, 0x7, 0xa8, 0x98, 0xb2, 0xfe, 0x3d, 0xfc, 0xde, 0xa0, 0xaa, 0xb3}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_unlockedtokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\xaf\x5b\xb3\x34\x1d\x4a\x87\x6c\x09\x72\xc0\x50\x32\xd4\xca\xd0\x51\xb6\xcf\x8e\xb0\x7c\x67\xa4\x13\x0d\x94\xfe\xf7\x62\xea\x31\xeb\x1b\xde\x7b\x61\x5e\x24\x29\xce\x51\xbe\x6b\xeb\x7c\x1b\xa9\x51\x3f\x05\x1e\x31\x24\x99\xf1\x7a\xaf\x6d\x75\x71\xb5\xfb\x72\xc7\xd3\x47\x75\xb4\xf6\xb3\x6a\x1a\x63\xf6\x7b\xb8\x5b\xc8\xc8\x5d\x0a\x8b\x22\x91\x96\xc4\x19\x7a\x23\xb4\x3e\x7a\xee\x08\x32\xa0\x70\x94\x6e\xa2\x1e\x2a\x13\x71\x5e\x91\x07\x4b\x4f\xc6\x2c\xa5\xc5\x50\x18\xb3\x0f\xfc\xbc\xa2\xda\x1e\xd0\x68\x0a\x3c\xee\x0e\xb8\x9e\xc3\xfd\xfd\x0d\x3f\x06\xc0\x26\x7f\xb0\xf8\x32\x92\x5e\xa4\xa7\xeb\x96\x39\xfd\x97\x37\xdd\xee\xc9\xfc\xfe\x05\x00\x00\xff\xff\x11\xa6\xa7\xd5\xde\x00\x00\x00"

func TransactionsIdtablestakingGet_node_unlockedtokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_unlockedtokensCdc,
		"../../../transactions/idTableStaking/get_node_unlockedTokens.cdc",
	)
}

func TransactionsIdtablestakingGet_node_unlockedtokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_unlockedtokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_unlockedTokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf2, 0x5f, 0xed, 0xe8, 0xe, 0x72, 0x20, 0x14, 0xde, 0x4d, 0x83, 0xd7, 0xac, 0x38, 0x23, 0x8f, 0x6c, 0xb2, 0x37, 0x4d, 0x7, 0xfa, 0x4b, 0xef, 0x9f, 0x39, 0x5d, 0x24, 0x82, 0x68, 0xac, 0x78}}
	return a, nil
}

var _TransactionsIdtablestakingGet_node_unstakedtokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x4f\xc3\x30\x14\x06\x77\xff\x8a\x8f\x8d\x2e\x94\x01\x31\x74\x6b\xe5\x54\xb2\x84\x3a\x60\x77\x60\x74\x92\x97\xc4\x4a\xf2\x1c\xd9\xcf\x22\x12\xe2\xbf\xa3\x40\x46\xd6\x1b\xee\x2e\xcc\x4b\x4c\x82\xeb\x14\x3f\x8d\x76\xbe\x9e\xc8\x8a\x1f\x03\xf7\xe8\x52\x9c\xf1\xbc\x1a\x5d\xdd\x9c\x71\x1f\xee\x7c\x79\xab\xce\x5a\xbf\x57\xd6\x2a\x75\x3c\xc2\x0d\x21\x23\x37\x29\x2c\x82\x44\x52\x12\x67\xc8\x40\xa8\xfd\xe4\xb9\x21\xc4\x0e\x85\xb3\xf8\x91\x5a\x48\x1c\x89\xf3\x86\x3c\x38\xb6\xa4\xd4\x52\x6a\x74\x85\x31\xfb\xc0\x8f\x1b\x32\xfa\x04\x2b\x29\x70\x7f\x38\xe1\x7e\x0d\xeb\xeb\x0b\xbe\x14\x80\x5d\xfe\xcf\xe2\x53\x4f\x72\x8b\x2d\xdd\xd9\xfe\x66\x2e\x7f\xe5\x5d\x77\x78\x50\xdf\x3f\x01\x00\x00\xff\xff\xdf\xb9\xea\xeb\xde\x00\x00\x00"

func TransactionsIdtablestakingGet_node_unstakedtokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_node_unstakedtokensCdc,
		"../../../transactions/idTableStaking/get_node_unstakedTokens.cdc",
	)
}

func TransactionsIdtablestakingGet_node_unstakedtokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_node_unstakedtokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_node_unstakedTokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x1, 0xad, 0xb9, 0xf9, 0x57, 0xaf, 0xd9, 0x8b, 0xcc, 0x57, 0xa7, 0xd, 0xbe, 0x1b, 0x15, 0x13, 0x85, 0x12, 0x0, 0x2f, 0x5f, 0xc9, 0xa9, 0x1e, 0x56, 0x7d, 0x1f, 0xc6, 0xe9, 0x77, 0x30}}
	return a, nil
}

var _TransactionsIdtablestakingGet_proposed_tableCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4a\x04\x31\x10\x06\xe0\x3e\x4f\xf1\x97\x77\x8d\x67\x6d\x77\x92\x15\x02\x72\x88\x49\x23\x62\xb1\x77\x3b\x9b\x1d\xdc\x9d\x84\xc9\x04\x15\xf1\xdd\x45\xb0\xbc\x17\xf8\xf8\x78\xab\x45\x0d\x0f\x6b\xf9\x08\x3e\x8d\xe7\x95\xa2\x8d\xef\x2c\x19\xb3\x96\x0d\xb7\x9f\xc1\x0f\xa7\x14\xd2\x4b\x3a\xde\x3f\x0e\x47\xef\x9f\x87\x18\x9d\x3b\x1c\x90\x16\x6e\x68\x17\xe5\x6a\x50\xb2\xae\xd2\x60\x0b\xe1\xd2\x55\x49\x0c\x3c\x91\x18\xdb\x17\xec\x4f\xc5\x4a\x92\x6d\x71\xae\xf6\x33\xe6\x2e\xd8\x46\x96\xdd\xfe\x0e\xaf\xd1\x94\x25\xbf\xe1\xdb\x01\xf8\x97\xae\x7c\x6e\x32\xd9\x93\x96\x5a\x1a\x4d\xa7\x32\x51\xf0\x6d\xb7\x77\x3f\xbf\x01\x00\x00\xff\xff\xd3\xe0\x18\x61\xc0\x00\x00\x00"

func TransactionsIdtablestakingGet_proposed_tableCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_proposed_tableCdc,
		"../../../transactions/idTableStaking/get_proposed_table.cdc",
	)
}

func TransactionsIdtablestakingGet_proposed_tableCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_proposed_tableCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_proposed_table.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xca, 0x75, 0x49, 0x77, 0x1d, 0x0, 0x4c, 0x7b, 0x1a, 0xc3, 0x14, 0x3f, 0xd9, 0x9e, 0x45, 0xf1, 0x9a, 0xeb, 0x3e, 0x4e, 0x8a, 0x4, 0x5e, 0x94, 0x18, 0xcf, 0x6b, 0x8b, 0x24, 0xd6, 0x5e}}
	return a, nil
}

var _TransactionsIdtablestakingGet_stakerequirementsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x4b\x33\x41\x14\x45\xfb\xf9\x15\xf7\xeb\x92\xe6\x8b\x85\x88\x04\x2c\x22\xbb\x81\x05\xb5\xc8\x4e\x0a\x11\x8b\xd9\xe4\x6d\xf2\xd8\x99\x37\x9b\x99\x37\x18\x10\xff\xbb\x8c\xb6\xb6\x07\xee\xb9\x87\xc3\x1c\x93\x62\xeb\xe3\x47\xd7\x58\x37\x78\xea\xd5\x4d\x2c\x27\x8c\x29\x06\xdc\x5c\xbb\xa6\x7d\xb1\x9d\x7d\xb5\x9b\xc7\xa7\x76\xd3\x34\xbb\xb6\xef\x8d\x59\xad\x60\xcf\x9c\x91\x0f\x89\x67\x45\x22\x2d\x49\x32\xf4\x4c\x18\x9c\x77\x72\x20\xc4\x11\x59\xdd\x44\x47\x68\x9c\x48\x72\x05\x0e\x12\x8f\x64\xcc\x5c\x06\x8c\x45\x10\x1c\xcb\x22\x45\x4f\x6b\xec\x3b\xd1\xfb\xe5\x1a\xfb\x2d\x5f\xef\x6e\xf1\x69\x00\xc0\x53\x75\x5f\xf0\xf0\x47\xe0\xff\x13\xe9\x33\x0b\x87\x12\x2a\xa1\x1d\x5d\x0a\x27\x0a\x24\x9a\x17\x4b\xf3\xb3\xff\xed\xaa\x8a\xb7\xfa\xf2\xfe\xcf\x7c\x7d\x07\x00\x00\xff\xff\x94\x17\x67\xd0\xf1\x00\x00\x00"

func TransactionsIdtablestakingGet_stakerequirementsCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_stakerequirementsCdc,
		"../../../transactions/idTableStaking/get_stakeRequirements.cdc",
	)
}

func TransactionsIdtablestakingGet_stakerequirementsCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_stakerequirementsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_stakeRequirements.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x42, 0x8e, 0x32, 0x9e, 0x5d, 0x9, 0x77, 0x67, 0x63, 0xb3, 0x34, 0x22, 0x62, 0x79, 0x87, 0xaf, 0x67, 0x2c, 0x9b, 0xed, 0x6c, 0x82, 0xf7, 0x38, 0xaa, 0x16, 0x74, 0xcd, 0x2a, 0xf8, 0x5d}}
	return a, nil
}

var _TransactionsIdtablestakingGet_tableCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xbf\x4a\x04\x31\x10\x07\xe0\x3e\x4f\xf1\x2b\xef\x1a\xcf\xda\xee\x24\x2b\x04\x64\x0b\x93\x46\xc4\x62\xff\xcc\x66\x07\x77\x27\xcb\x64\x82\x8a\xf8\xee\x22\x58\xfa\x02\x1f\x1f\xef\x47\x51\xc3\xc3\x56\xde\x83\x4f\xc3\xb8\x51\xb4\xe1\x8d\x25\x63\xd1\xb2\xe3\xf6\x23\xf8\xae\x4f\x21\x3d\xa7\xeb\xfd\x63\x77\xf5\xfe\xa9\x8b\xd1\xb9\xcb\x05\x69\xe5\x8a\x3a\x29\x1f\x06\x25\x6b\x2a\x15\xb6\x12\xa6\xa6\x4a\x62\xe0\x99\xc4\xd8\x3e\x61\xbf\x2a\x36\x92\x6c\xab\x73\x47\x1b\xb1\x34\xc1\x3e\xb0\x9c\xce\x77\x78\x89\xa6\x2c\xf9\x15\x5f\x0e\xc0\x9f\xf4\xcf\xe7\x26\x93\xf5\x65\xa6\xe0\xeb\xe9\xec\xbe\x7f\x02\x00\x00\xff\xff\x94\x0c\xfa\xd5\xb8\x00\x00\x00"

func TransactionsIdtablestakingGet_tableCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_tableCdc,
		"../../../transactions/idTableStaking/get_table.cdc",
	)
}

func TransactionsIdtablestakingGet_tableCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_tableCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_table.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xf8, 0x5a, 0xde, 0x69, 0xf4, 0xb2, 0x52, 0xda, 0x8c, 0xf5, 0xfd, 0xb, 0x8, 0x27, 0x24, 0xc0, 0x38, 0xc, 0x44, 0x35, 0xdf, 0xfc, 0x26, 0xe7, 0xe6, 0x2d, 0xd, 0x2d, 0x51, 0x84, 0x99}}
	return a, nil
}

var _TransactionsIdtablestakingGet_totalstaked_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x4a\xc3\x40\x14\x45\xf7\xf3\x15\xd7\x5d\xbb\xb1\x2e\x44\xa4\xe0\xa2\x25\x29\x04\xa4\x0b\x33\x5d\x88\xb8\x98\x34\x2f\xed\x90\xc9\x7b\xc3\xcc\x0b\xb6\x88\xff\x2e\x89\xba\x73\x7b\xb9\x9c\x73\xfc\x10\x25\x29\x76\x41\x3e\xaa\xc2\xba\x26\x50\xad\xae\xf7\x7c\x42\x97\x64\xc0\xdd\xa5\x2a\xca\xbd\xad\xec\xab\xdd\x6c\x9f\xcb\x4d\x51\xbc\x94\x75\x6d\xcc\x6a\x05\x7b\xf6\x19\xf9\x98\x7c\x54\x24\xd2\x31\x71\x86\x9e\x09\x8d\x0b\x8e\x8f\x04\xe9\x90\xd5\xf5\xd4\x42\xa5\x27\xce\xd3\xe0\xc0\xd2\x92\x31\x71\x6c\xd0\x8d\x8c\xc1\x79\x5e\x24\x09\xb4\xc6\xa1\x62\x7d\x5c\xae\x71\xd8\xf9\xcb\xc3\x3d\x3e\x0d\x00\x04\xd2\x3f\xc8\xd3\x3f\x8d\xb7\x27\x52\x2b\xea\x82\x9d\x0d\xf5\xfc\xdc\x5e\xf7\xd2\x92\xbd\x46\x5a\x2c\xcd\x4c\xf9\xa9\xfb\x05\xbd\x4d\xba\xf7\x1b\xf3\xf5\x1d\x00\x00\xff\xff\xa3\x91\xa6\x55\xfa\x00\x00\x00"

func TransactionsIdtablestakingGet_totalstaked_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_totalstaked_by_typeCdc,
		"../../../transactions/idTableStaking/get_totalStaked_by_type.cdc",
	)
}

func TransactionsIdtablestakingGet_totalstaked_by_typeCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_totalstaked_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_totalStaked_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0x23, 0xae, 0xad, 0x6a, 0x8a, 0xa, 0x6e, 0x26, 0x92, 0x41, 0x25, 0x43, 0x64, 0x93, 0x17, 0xde, 0xa4, 0x31, 0x94, 0x9d, 0xb7, 0xb2, 0x15, 0xcb, 0xe1, 0xf8, 0x7b, 0x9a, 0x28, 0xf6, 0xa4}}
	return a, nil
}

var _TransactionsIdtablestakingGet_unstaking_requestCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\x8d\x74\xa1\x0c\x88\xa1\x5b\x91\x53\x29\x12\xea\x50\xbb\x03\xa3\xd3\x5c\xdc\x53\x92\x73\xb0\xcf\xa2\x12\xe2\xbb\xa3\xa2\x8c\x5d\xff\xc3\xef\x3d\x9e\x97\x94\x15\x87\x29\x7d\xb7\xd6\x87\x6e\x22\xa7\x61\x64\x89\x18\x72\x9a\xf1\x72\x6b\x6d\x73\xf4\xad\xff\xf4\xfb\xf7\x8f\x66\x6f\xed\xa9\x71\xce\x98\xed\x16\xfe\xca\x05\xe5\x92\x79\x51\x64\xd2\x9a\xa5\x40\xaf\x84\x2e\x4c\x41\x2e\x84\x34\xa0\x4a\xd1\x30\x52\x0f\x4d\x23\x49\xb9\xa7\x00\x49\x3d\x19\xb3\xd4\x0e\x43\x15\xcc\x81\xe5\xe9\x9e\x5a\xbb\x83\xd3\xcc\x12\x37\x3b\x9c\x0f\x7c\x7b\x7b\xc5\x8f\x01\xb0\xe2\x0f\x2e\x3e\x47\xd2\x63\xea\xe9\xfc\x3f\xc3\x12\x4f\xf4\x55\xa9\xe8\xea\x6d\xcc\xef\x5f\x00\x00\x00\xff\xff\x00\x0d\x5f\xd9\xde\x00\x00\x00"

func TransactionsIdtablestakingGet_unstaking_requestCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_unstaking_requestCdc,
		"../../../transactions/idTableStaking/get_unstaking_request.cdc",
	)
}

func TransactionsIdtablestakingGet_unstaking_requestCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_unstaking_requestCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_unstaking_request.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x61, 0xba, 0xad, 0xe7, 0x55, 0x16, 0x6c, 0xd4, 0x76, 0x86, 0x3d, 0x87, 0x39, 0x74, 0x9f, 0xe0, 0xc9, 0xa2, 0xe1, 0x93, 0x8a, 0x56, 0x95, 0x84, 0xd1, 0x2, 0x2c, 0x99, 0x8f, 0xeb, 0x23, 0x85}}
	return a, nil
}

var _TransactionsIdtablestakingGet_weeklypayoutCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4b\xc4\x30\x14\xc7\xf1\x3d\x7f\xc5\x6f\xbc\x5b\x3c\x07\x71\x70\x3b\x49\x0e\x0a\x22\x62\xe3\xe0\xf8\xda\x7b\x6d\x43\xdb\xbc\x90\xbc\x60\x45\xfc\xdf\xa5\xe0\x78\xeb\x77\xf8\xf0\x0d\x6b\x92\xac\xb8\x2c\xf2\xd5\x58\x4f\xdd\xc2\xad\xd2\x1c\xe2\x88\x21\xcb\x8a\xfb\xad\xb1\xee\xd5\x37\xfe\xd3\x9f\x9f\x5f\xdc\xd9\xda\x77\xd7\xb6\xc6\x9c\x4e\xf0\x53\x28\x28\x7d\x0e\x49\x91\x59\x6b\x8e\x05\x3a\x31\x3a\x5a\x28\xf6\x0c\x19\x50\x94\x66\xbe\x42\x65\xe6\x58\xf6\x40\x88\x72\x65\x63\x52\xed\x30\xd4\x88\x95\x42\x3c\x1c\x9f\xf0\x71\x09\xdb\xe3\x03\x7e\x0c\x80\x7f\xec\xc6\xd2\xdd\xc8\xea\x92\xf4\x93\xdf\xc1\x37\xfa\x96\xaa\x87\xa3\xf9\xfd\x0b\x00\x00\xff\xff\xaa\x9e\x1d\x2b\xc4\x00\x00\x00"

func TransactionsIdtablestakingGet_weeklypayoutCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingGet_weeklypayoutCdc,
		"../../../transactions/idTableStaking/get_weeklyPayout.cdc",
	)
}

func TransactionsIdtablestakingGet_weeklypayoutCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingGet_weeklypayoutCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/get_weeklyPayout.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0xeb, 0x9b, 0x20, 0x40, 0xd3, 0x5b, 0x8, 0x6d, 0xe7, 0x22, 0xb, 0xdd, 0x87, 0xa4, 0x41, 0xf2, 0xb5, 0xc2, 0x43, 0x2d, 0x8f, 0x9a, 0x65, 0xf4, 0x31, 0xfa, 0xd2, 0x6f, 0xda, 0x4f, 0x9d}}
	return a, nil
}

var _TransactionsIdtablestakingRequest_unstakeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xea\x40\x10\xc7\xef\xf9\x14\x7f\x3c\x3c\xe2\x25\x79\x87\xc7\x3b\x84\xb6\x92\x36\x0a\x82\x78\xd0\x78\xe8\x71\xdd\x4c\x34\x35\xd9\x49\x27\x93\x2a\x14\xbf\x7b\x89\xd1\x40\x11\x4a\xff\x97\x59\x58\xf6\xb7\xbf\x99\x29\xaa\x9a\x45\x31\x2b\xf9\x38\x4f\x52\xb3\x2d\x69\xad\xe6\x50\xb8\x1d\x72\xe1\x0a\x7f\x4f\xf3\x64\xba\x4c\xe7\xe9\x6b\x1a\x3f\x2f\xa6\x71\x92\xac\xa6\xeb\xb5\xe7\x79\x2a\xc6\x35\xc6\x6a\xc1\xce\x37\x15\xb7\x4e\x23\x6c\x66\xc5\xe9\xff\xbf\x31\x3e\x3d\x0f\x00\xc2\x10\x0b\xb6\xa6\xc4\x87\x91\xa2\x23\x23\x67\x81\x81\x50\x4e\x42\xce\x12\x94\xa1\x7b\x82\xe3\x8c\xc0\xdb\x37\xb2\x7a\x79\x58\x92\xa2\x51\x73\x20\x59\x51\x1e\xe1\xcf\xbd\x5c\xb0\xe4\xec\x72\x26\xe9\xff\xaa\x85\x6a\x23\xe4\x1b\x6b\x35\x42\xdc\xea\x3e\xb6\xb6\xb3\xea\x6c\x70\x4d\x18\x62\xcb\x22\x7c\xfc\x8d\x44\x97\x86\xca\x3c\x18\x4c\xf0\x88\x0e\x1f\xf4\x8c\x87\x9f\xb5\x9e\xfc\x6e\x7e\x11\xc2\x46\x59\xcc\x8e\xc2\xbc\xe4\x63\x7f\x35\x1e\xf8\x5d\x26\x13\xd4\xc6\x15\xd6\x1f\xbd\x70\x5b\x66\x70\xac\x37\xcb\x6f\x8e\xcd\x75\x2d\x26\xab\x0a\x37\x1a\xf7\x6d\x9f\xfb\x42\x27\xb2\xad\xd2\x6d\xf0\xf7\xea\x81\xd0\x7b\x4b\x8d\x6e\xdc\xd5\x74\xd8\x59\x5f\x07\xdc\xf9\x2b\x00\x00\xff\xff\xa4\xb1\xf5\x1f\x10\x02\x00\x00"

func TransactionsIdtablestakingRequest_unstakeCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingRequest_unstakeCdc,
		"../../../transactions/idTableStaking/request_unstake.cdc",
	)
}

func TransactionsIdtablestakingRequest_unstakeCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingRequest_unstakeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/request_unstake.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5a, 0x29, 0x2e, 0x2c, 0x91, 0x74, 0x2, 0x59, 0x9b, 0x3f, 0x31, 0x55, 0x8b, 0xd1, 0xe1, 0xac, 0x90, 0x96, 0x8a, 0xd8, 0xb4, 0x16, 0xc2, 0x65, 0xc8, 0xb8, 0x17, 0xbc, 0x99, 0xd0, 0x1e, 0xf0}}
	return a, nil
}

var _TransactionsIdtablestakingStake_new_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xc1\x8e\x9b\x40\x0c\x86\xef\x3c\x85\xb5\x87\x0a\x0e\x85\x1e\xaa\x1e\xd0\xb6\x2b\x5a\x88\x14\x35\x62\xa5\x0d\x6d\xd5\xa3\x33\x98\xcd\x34\x30\x46\x83\x29\x91\xaa\x7d\xf7\x6a\x20\xd0\x44\x89\xaa\xaa\xbe\xcc\x20\xfb\x37\x9f\xff\xb1\x6e\x5a\xb6\x02\xab\x9a\x87\x75\x5a\xe0\xae\xa6\xad\xe0\x41\x9b\x67\xa8\x2c\x37\xf0\xe6\xb8\x4e\xb3\xbc\x58\x17\xdf\x8b\xe4\xe3\x26\x4b\xd2\xf4\x29\xdb\x6e\xbd\x33\x55\xc1\x07\x32\x73\xf1\x6a\xf3\xf8\xad\x78\xfc\x9c\xe5\x73\xa1\xe7\x89\x45\xd3\xa1\x12\xcd\xc6\xc7\x86\x7b\x23\x31\x7c\x59\xe9\xe3\xbb\xb7\x01\xfc\xf2\x3c\x00\x80\x28\x82\x0d\x2b\xac\xe1\x27\x5a\xed\x10\xa0\x62\x0b\x08\x96\x2a\xb2\x64\x14\x81\x30\xc8\x9e\xc0\x70\x49\xc0\xbb\x1f\xa4\x64\x14\xd6\x24\xd0\x09\x1e\xc8\x3e\x51\x15\xc3\xab\xeb\x29\xc2\x9c\xcb\xf1\x4e\xd6\x5b\x24\xd5\x8c\xfd\x47\x35\x7e\x86\x5f\xb1\xaf\x65\xaa\x6b\x2d\xb5\x68\xc9\x47\xa5\x24\x86\xa4\x97\x7d\xa2\x94\xa3\x77\xd4\x70\x8a\x28\x82\x1d\x5b\xcb\xc3\xbf\xc0\xba\xe8\xa8\xae\xc2\x85\x18\xde\x83\x6b\x1f\x4e\x3d\xee\xff\x8e\xff\xc1\x77\x1e\xc7\x10\x75\xc2\x16\x9f\x29\x72\x53\x4c\xa9\x60\xe9\xef\xe2\xe1\x01\x5a\x34\x5a\xf9\x77\x9f\xb8\xaf\x4b\x30\x2c\x33\xe5\x05\x63\x77\x7a\x67\x2c\x1b\x6d\xee\x02\xef\x12\xf2\xdc\xa3\x5b\x9c\x67\x86\xdd\x24\x1b\xf3\x63\xfa\xff\xe8\xdc\x26\xc1\xa8\x9f\xd1\x5e\xa6\x83\x8e\xa4\x7a\xa1\x79\x77\xae\x5d\x9d\x6e\x39\x4d\x08\x9d\x7f\xff\xfa\x6a\xa0\x70\xd0\xb2\x2f\x2d\x0e\xcb\x46\x4e\x67\xb0\xfc\xea\xe5\x77\x00\x00\x00\xff\xff\xd3\xa8\x35\x45\x18\x03\x00\x00"

func TransactionsIdtablestakingStake_new_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingStake_new_tokensCdc,
		"../../../transactions/idTableStaking/stake_new_tokens.cdc",
	)
}

func TransactionsIdtablestakingStake_new_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingStake_new_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/stake_new_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0xe6, 0xde, 0xda, 0x4, 0x77, 0x5f, 0x1c, 0xd8, 0x2f, 0x8a, 0xa6, 0x2a, 0x98, 0x9d, 0xb8, 0x37, 0x94, 0xbf, 0x52, 0xfa, 0x76, 0x50, 0xfb, 0xc4, 0xad, 0x52, 0xfa, 0xfb, 0x98, 0xba, 0x34}}
	return a, nil
}

var _TransactionsIdtablestakingStake_rewarded_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\x6a\xc2\x40\x10\x86\xef\x79\x8a\xc1\x43\x89\x17\xd3\x43\xe9\x21\xb4\x95\xb4\x51\x10\xc4\x83\xa6\x87\x1e\xc7\xcd\x44\x53\x93\x9d\x30\x99\x34\x42\xf1\xdd\xcb\xba\x1a\x28\x42\xe9\x7f\x99\x81\x65\xbf\xfd\x76\xa6\xac\x1b\x16\x85\x79\xc5\xfd\x22\xcd\x70\x5b\xd1\x46\xf1\x50\xda\x1d\x14\xc2\x35\xdc\x1f\x17\xe9\x6c\x95\x2d\xb2\x8f\x2c\x79\x5d\xce\x92\x34\x5d\xcf\x36\x9b\x20\x08\x54\xd0\xb6\x68\xb4\x64\x1b\x62\xcd\x9d\xd5\x18\xde\xe7\xe5\xf1\xf1\x61\x0c\xdf\x41\x00\x00\x10\x45\xb0\x64\x83\x15\x7c\xa1\x94\x8e\x0c\x05\x0b\x20\x08\x15\x24\x64\x0d\x81\x32\xe8\x9e\xc0\x72\x4e\xc0\xdb\x4f\x32\x7a\xbe\x58\x91\x42\xab\x78\x20\x59\x53\x11\xc3\xdd\xad\xdc\x64\xc5\xf9\xb9\x27\xf1\x6f\x35\x42\x0d\x0a\x85\x68\x8c\xc6\x90\x74\xba\x4f\x8c\x71\x56\xce\x06\x2e\x89\x22\xd8\xb2\x08\xf7\xff\x91\x70\x69\xa9\x2a\x26\x83\x09\x3c\x83\xc3\x4f\x3c\xe3\xe9\x6f\xad\x97\xd0\xcd\x2f\x86\xa8\x55\x16\xdc\x51\x54\x54\xdc\xfb\xa3\xf1\xc0\x77\x99\x4e\xa1\x41\x5b\x9a\x70\xf4\xc6\x5d\x95\x83\x65\xbd\x5a\xfe\x72\x6c\x2f\x6b\xc1\xbc\x2e\xed\x68\xec\xbf\x7d\xf2\x85\x8e\x64\x3a\xa5\xeb\xe0\x6f\xd5\x7d\xb7\xa6\x1e\x25\xa7\x3c\xe3\x03\xd9\x76\x58\x9b\xaf\x03\xf1\xf4\x13\x00\x00\xff\xff\x4b\xcd\xc9\xdc\x13\x02\x00\x00"

func TransactionsIdtablestakingStake_rewarded_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingStake_rewarded_tokensCdc,
		"../../../transactions/idTableStaking/stake_rewarded_tokens.cdc",
	)
}

func TransactionsIdtablestakingStake_rewarded_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingStake_rewarded_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/stake_rewarded_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x23, 0xa8, 0x41, 0xb3, 0x2, 0x62, 0x68, 0x81, 0xe5, 0xe0, 0xe1, 0xb3, 0x39, 0x63, 0xce, 0xa9, 0x3f, 0xc1, 0x67, 0x60, 0xc, 0x49, 0x26, 0x88, 0x54, 0x6, 0x60, 0xee, 0x82, 0x48, 0x10, 0xb6}}
	return a, nil
}

var _TransactionsIdtablestakingStake_unlocked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xf2\x40\x10\x86\xef\xf9\x15\x2f\x1e\x3e\xe2\xc5\x7c\x87\xd2\x43\x68\x2b\x69\xa3\x20\x88\x07\x8d\x87\x1e\xd7\xcd\x44\xd3\x6c\x76\xc2\x66\x52\x85\xe2\x7f\x2f\x71\x35\x50\x84\xd2\xf7\x32\x03\xcb\x3e\xfb\xec\x4c\x59\x37\xec\x04\x73\xc3\xc7\x45\x9a\xa9\x9d\xa1\x8d\xa8\xaa\xb4\x7b\x14\x8e\x6b\xfc\x3f\x2d\xd2\xd9\x2a\x5b\x64\xef\x59\xf2\xba\x9c\x25\x69\xba\x9e\x6d\x36\x41\x10\x88\x53\xb6\x55\x5a\x4a\xb6\xa1\xaa\xb9\xb3\x12\x63\x3b\x2f\x4f\x8f\x0f\x63\x7c\x05\x01\x00\x44\x11\x96\xac\x95\xc1\xa7\x72\x65\x4f\x46\xc1\x0e\x0a\x8e\x0a\x72\x64\x35\x41\x18\x72\x20\x58\xce\x09\xbc\xfb\x20\x2d\x97\x8b\x86\x04\xad\xa8\x8a\xdc\x9a\x8a\x18\xff\xee\xe5\x26\x2b\xce\x2f\x3d\x39\xff\x56\xe3\xa8\x51\x8e\x42\xa5\xb5\xc4\x48\x3a\x39\x24\x5a\xf7\x56\xbd\x0d\xae\x89\x22\xec\xd8\x39\x3e\xfe\x45\xa2\x4f\x4b\xa6\x98\x0c\x26\x78\x46\x8f\x9f\x78\xc6\xd3\xef\x5a\x2f\x61\x3f\xbf\x18\x51\x2b\xec\xd4\x9e\xa2\xc2\xf0\xd1\x1f\x8d\x07\x7e\x9f\xe9\x14\x8d\xb2\xa5\x0e\x47\x6f\xdc\x99\x1c\x96\xe5\x66\xf9\xc3\xb1\xbd\xae\x45\xe5\x75\x69\x47\x63\xff\xed\xb3\x2f\x74\x22\xdd\x09\xdd\x06\x7f\xaf\xee\xbb\xad\x35\xac\x2b\xca\x33\xae\xc8\xb6\xc3\xda\x7c\x1d\x88\xe7\xef\x00\x00\x00\xff\xff\x25\xe0\x9d\xc9\x13\x02\x00\x00"

func TransactionsIdtablestakingStake_unlocked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingStake_unlocked_tokensCdc,
		"../../../transactions/idTableStaking/stake_unlocked_tokens.cdc",
	)
}

func TransactionsIdtablestakingStake_unlocked_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingStake_unlocked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/stake_unlocked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1a, 0x3a, 0x4, 0x93, 0xd7, 0xa8, 0xa4, 0x7d, 0x59, 0x9c, 0x20, 0xb4, 0x6, 0xd9, 0xf8, 0x2e, 0x83, 0xe1, 0x31, 0x94, 0x97, 0x35, 0xe3, 0x7d, 0xcb, 0x63, 0xe, 0xcb, 0x6d, 0x42, 0xde, 0x2c}}
	return a, nil
}

var _TransactionsIdtablestakingWithdraw_reward_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xc1\x8e\xd3\x40\x0c\x86\xef\x79\x0a\x6b\x0f\xa8\x3d\x90\x70\x40\x1c\xaa\x85\x55\xa1\xa9\x54\x51\x75\xa5\x36\x80\x38\xba\x33\xce\x76\x68\x32\x8e\x1c\x87\x54\x42\xfb\xee\x68\x92\x26\xb4\xa2\x42\x68\x7d\x71\x22\xfb\x77\x3e\xff\xb1\x2b\x2b\x16\x85\x65\xc1\xed\x6a\x91\xe1\xbe\xa0\x9d\xe2\xd1\xf9\x27\xc8\x85\x4b\x78\x73\x5a\x2d\xd2\x4d\xb6\xca\xbe\x67\xf3\x8f\xeb\x74\xbe\x58\x6c\xd3\xdd\x2e\xba\x50\x65\x7c\x24\x3f\x34\x2f\xd7\x8f\xdf\xb2\xc7\xcf\xe9\x66\x68\x8c\x22\x15\xf4\x35\x1a\x75\xec\x27\x58\x72\xe3\x75\x06\x5f\x96\xee\xf4\xee\xed\x14\x7e\x45\x11\x00\x40\x92\xc0\x9a\x0d\x16\xf0\x13\xc5\x05\x04\xc8\x59\x00\x41\x28\x27\x21\x6f\x08\x94\x41\x0f\x04\x9e\x2d\x01\xef\x7f\x90\xd1\x4e\x58\x90\x42\xad\x78\x24\xd9\x52\x3e\x83\x57\x7f\x6f\x11\x6f\xd8\x76\xcf\x24\xd1\x28\xc9\x07\xec\x3f\xaa\xee\x35\xfe\x8a\x4d\xa1\x7d\x5f\x25\x54\xa1\xd0\x04\x8d\xd1\x19\xcc\x1b\x3d\xcc\x8d\x09\xf4\x81\x1a\xce\x91\x24\xb0\x67\x11\x6e\xff\x07\x36\x44\x4d\x45\x1e\x8f\xc4\xf0\x1e\xc2\xf8\xb8\x9f\x71\xff\x6f\xfc\x0f\x93\xe0\xf1\x0c\x92\x5a\x59\xf0\x89\x92\xb0\x45\x5f\x9a\x8e\xf3\x43\x3c\x3c\x40\x85\xde\x99\xc9\xdd\x27\x6e\x0a\x0b\x9e\x75\xa0\xbc\x62\xac\xcf\xff\x19\x6d\xe9\xfc\xdd\x34\xba\x86\xbc\xf4\xe8\x16\xe7\x85\x61\x37\xc9\xba\x7a\x57\x7e\x19\x5d\xb8\x24\xe8\xf4\x03\xda\x73\x9f\xe8\x44\xa6\x51\x1a\x6e\xe7\x26\x70\x6c\xa9\xe2\xda\xe9\x19\xec\xfe\xf5\xb5\xef\x71\xeb\xf4\x60\x05\xdb\x2d\xb5\x28\x96\x6c\xa7\xab\xc7\xf3\xec\xf3\x74\xfc\xee\xf3\xef\x00\x00\x00\xff\xff\xef\xcb\xb8\x7b\x25\x03\x00\x00"

func TransactionsIdtablestakingWithdraw_reward_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingWithdraw_reward_tokensCdc,
		"../../../transactions/idTableStaking/withdraw_reward_tokens.cdc",
	)
}

func TransactionsIdtablestakingWithdraw_reward_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingWithdraw_reward_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/withdraw_reward_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0x34, 0xc7, 0xad, 0xba, 0x11, 0x97, 0xdc, 0x3, 0x3e, 0x57, 0xf9, 0x6d, 0x6a, 0x5f, 0x41, 0xc0, 0xb, 0xaa, 0xe1, 0xd9, 0x8b, 0xbc, 0x24, 0x13, 0xd4, 0x15, 0x26, 0xf4, 0xf8, 0x5a, 0x8b}}
	return a, nil
}

var _TransactionsIdtablestakingWithdraw_unlocked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xc1\x8e\x9b\x40\x0c\x86\xef\x3c\x85\xb5\x87\x2a\x39\x14\x7a\xa8\x7a\x40\xdb\xae\x68\x21\x52\xd4\x28\x2b\x6d\xd8\x56\x3d\x3a\x83\xd9\x4c\x19\xc6\x68\x30\x25\x52\x95\x77\xaf\x06\x02\x4d\xd4\xa8\xaa\xea\x8b\x41\xf6\x6f\x3e\xff\x58\xd7\x0d\x3b\x81\x95\xe1\x7e\x9d\xe6\xb8\x37\xb4\x13\xac\xb4\x7d\x81\xd2\x71\x0d\x6f\x8e\xeb\x34\xdb\xe6\xeb\xfc\x5b\x9e\x7c\xdc\x64\x49\x9a\x3e\x65\xbb\x5d\x70\xa1\xca\xb9\x22\x3b\x35\xaf\x36\x8f\x5f\xf3\xc7\xcf\xd9\x76\x6a\x0c\x02\x71\x68\x5b\x54\xa2\xd9\x2e\xb0\xe6\xce\x4a\x0c\xcf\x2b\x7d\x7c\xf7\x76\x09\x3f\x83\x00\x00\x20\x8a\x60\xc3\x0a\x0d\xfc\x40\xa7\x3d\x02\x94\xec\x00\xc1\x51\x49\x8e\xac\x22\x10\x06\x39\x10\x58\x2e\x08\x78\xff\x9d\x94\x0c\x42\x43\x02\xad\x60\x45\xee\x89\xca\x18\x5e\xfd\xb9\x45\xb8\xe5\x62\x78\x26\x17\xcc\x92\x72\xc2\xfe\xad\x1a\x5e\xc3\x2f\xd8\x19\x19\xfb\x1a\x47\x0d\x3a\x5a\xa0\x52\x12\x43\xd2\xc9\x21\x51\xca\xd3\x7b\x6a\x38\x47\x14\xc1\x9e\x9d\xe3\xfe\x5f\x60\x7d\xb4\x64\xca\x70\x26\x86\xf7\xe0\xc7\x87\xe3\x8c\xfb\xbf\xe3\x7f\x58\x78\x8f\x63\x88\x5a\x61\x87\x2f\x14\xf9\x2d\xc6\xd2\x72\x9e\xef\xe3\xe1\x01\x1a\xb4\x5a\x2d\xee\x3e\x71\x67\x0a\xb0\x2c\x13\xe5\x15\x63\x7b\xfe\xcf\x58\xd4\xda\xde\x2d\x83\x6b\xc8\x4b\x8f\x6e\x71\x5e\x18\x76\x93\x6c\xa8\x0f\xe5\xff\xa3\xf3\x97\x04\x83\x7e\x42\x3b\x8d\x89\x8e\xa4\x3a\xa1\xe9\x76\x6e\x02\x87\x05\x35\xdc\x6a\x39\x83\xdd\xbf\xbe\xf6\x3d\xec\xb5\x1c\x0a\x87\xfd\xb3\x35\xac\x2a\x2a\x06\x5d\x3b\x9f\xe7\x98\x97\xf3\x77\x4f\xbf\x02\x00\x00\xff\xff\x9d\xd3\xa7\xd1\x25\x03\x00\x00"

func TransactionsIdtablestakingWithdraw_unlocked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsIdtablestakingWithdraw_unlocked_tokensCdc,
		"../../../transactions/idTableStaking/withdraw_unlocked_tokens.cdc",
	)
}

func TransactionsIdtablestakingWithdraw_unlocked_tokensCdc() (*asset, error) {
	bytes, err := TransactionsIdtablestakingWithdraw_unlocked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/idTableStaking/withdraw_unlocked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x39, 0x5f, 0x61, 0xe3, 0xe6, 0xe0, 0x51, 0xe5, 0xa4, 0xb6, 0x90, 0xf7, 0xb0, 0x19, 0x9b, 0x45, 0x10, 0xb7, 0xa7, 0xa0, 0x7b, 0x9b, 0xc9, 0xeb, 0x3a, 0x61, 0x41, 0xb7, 0x2f, 0x83, 0x88}}
	return a, nil
}

var _TransactionsInspect_fieldCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xc1\x09\x42\x31\x0c\x06\xe0\x7b\xa7\xf8\x8f\x7a\x91\x22\x5a\x1f\xde\xbc\x74\x01\x71\x80\xbe\x9a\x42\xc0\x26\x8f\x98\xea\x03\x71\x77\x17\x70\x81\x8f\xfb\xa2\xe6\xc8\x0f\x7d\x5f\xc9\x5e\x5c\xe9\x52\xab\x0e\x71\x34\xd3\x8e\xb8\xb6\xe9\x9e\x28\x1e\xa7\x34\xc7\xb2\x8f\xf5\x14\xc2\x32\x66\xb4\x21\xe8\x85\x65\xb3\x3d\xe3\x96\x79\x4d\x07\x7c\x02\x00\x18\xf9\x30\xf9\xe3\xed\xdc\x8a\x3c\x4b\x75\x56\xc9\x44\xe1\xfb\x0b\x00\x00\xff\xff\x7c\xe1\x51\x3b\x7a\x00\x00\x00"

func TransactionsInspect_fieldCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsInspect_fieldCdc,
		"../../../transactions/inspect_field.cdc",
	)
}

func TransactionsInspect_fieldCdc() (*asset, error) {
	bytes, err := TransactionsInspect_fieldCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/inspect_field.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x74, 0xeb, 0x82, 0x68, 0x87, 0xc8, 0xaf, 0x97, 0x60, 0xf6, 0x63, 0x18, 0x23, 0x85, 0x7b, 0xb6, 0xf6, 0xbb, 0x8c, 0x4d, 0x40, 0x9c, 0x25, 0xc, 0xc5, 0x56, 0xa, 0xdf, 0x63, 0xa8, 0x28, 0xea}}
	return a, nil
}

var _TransactionsQcCreate_qc_objectCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\xae\x9b\x40\x0c\x85\xf7\x3c\x85\x7b\x17\x15\x48\xbd\xd0\x35\xca\x6d\x84\x26\xed\xaa\x6a\x45\xf2\x04\x66\x30\xc9\x54\xc3\x18\x19\x93\xb4\xaa\xf2\xee\x15\x3f\x89\x42\x15\x5d\xaf\xe6\xc7\xc7\xfe\xce\x71\x6d\xc7\xa2\xf0\xcd\xf3\xa5\x1c\x58\x86\xd6\x90\xa8\x6b\x9c\x45\x25\x68\x84\x5b\xf8\xfc\xbb\x34\xc5\x6e\xb7\xff\x7a\x38\x44\x51\xa4\x82\xa1\x47\xab\x8e\x43\x8c\x75\xeb\x42\x51\xd7\x42\x7d\x9f\xc3\x72\x48\xe0\x6f\x04\x00\x90\x65\xf0\x9d\x2d\x7a\x38\xa3\x38\xac\x3c\x41\xc3\x02\x08\x42\x0d\x09\x05\x4b\xa0\x0c\x7a\x22\x28\x0d\x14\xe3\x20\xe0\xea\x17\x59\x9d\xc4\x9e\x14\xa6\xe9\x7b\x6a\x72\xf8\xf8\x94\x2e\x9d\x54\xd1\xd4\xdf\x09\x75\x28\x14\xa3\xb5\x9a\x43\x31\xe8\xa9\xb0\x96\x87\xa0\x37\x9a\xd5\xd0\xe5\x0f\xde\xe0\x48\xba\x5c\x56\x66\x92\xe8\x2e\xca\x32\xa8\x58\x84\x2f\xcf\xd0\xf1\x7f\xee\xb1\x7a\xf2\x4d\x7a\x83\x87\xb7\xd5\xca\xf4\x48\x6a\xb0\xc3\xca\x79\xa7\x7f\x36\xef\x19\xfb\x12\x67\xdd\x50\x79\x67\xb3\x66\x6c\x32\xd3\x63\xf2\x21\x9d\x69\xe2\xe4\xbe\x6f\xac\xed\x16\x3a\x0c\xce\xc6\x2f\x86\x07\x5f\x43\x60\xbd\x61\xaf\xa0\x4b\x33\xe3\xbc\x3c\x38\x1c\x63\x09\x74\xf9\xc1\x35\xc1\xe6\x75\x8d\x9f\x5a\x21\x54\x2a\xcd\xcf\xc9\x63\xfc\x20\x1b\xa3\x4e\x7b\x3c\x53\xbc\x79\x5d\xe4\x9f\x40\x39\x87\xac\x57\x16\x3c\xd2\xc2\x3d\xa7\x33\xe3\x5e\xa3\xeb\xbf\x00\x00\x00\xff\xff\xbc\x5f\x36\xda\x70\x02\x00\x00"

func TransactionsQcCreate_qc_objectCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsQcCreate_qc_objectCdc,
		"../../../transactions/qc/create_qc_object.cdc",
	)
}

func TransactionsQcCreate_qc_objectCdc() (*asset, error) {
	bytes, err := TransactionsQcCreate_qc_objectCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/qc/create_qc_object.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5a, 0x26, 0x2a, 0x17, 0x92, 0x83, 0xe, 0x4c, 0x3d, 0xe3, 0xec, 0x78, 0xd9, 0x94, 0xaa, 0xce, 0x24, 0x84, 0x3, 0xee, 0xf1, 0x4a, 0x98, 0xf8, 0x38, 0xde, 0x50, 0xec, 0x6d, 0x70, 0x71, 0x37}}
	return a, nil
}

var _TransactionsQcGet_all_votesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x0a\xc2\x30\x10\x06\xe0\x3d\x4f\xf1\x8f\xed\x22\xce\x6e\xa5\xd5\x3d\x06\x5c\x4a\x87\x2a\x97\x72\x90\xe4\xca\x79\x87\x82\xf8\xee\xbe\x80\x2f\xf0\x71\xdd\x45\x0d\x97\x22\xaf\xe8\xa2\x5e\x47\x52\xe3\xcc\x8f\xd5\x08\x59\xa5\xe2\xf8\x8e\xe3\x30\x4d\xd7\x73\x4a\x21\xec\x7e\x47\xf6\x86\xba\x72\xeb\xfa\x13\xe6\x39\x99\x72\xdb\x96\x05\x9f\x00\x00\x4a\xe6\xda\xfe\x7b\x87\x8d\x6c\x28\x25\x8e\x37\x31\x7a\x76\x7d\xf8\xfe\x02\x00\x00\xff\xff\x25\x7c\xbf\xbd\x7e\x00\x00\x00"

func TransactionsQcGet_all_votesCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsQcGet_all_votesCdc,
		"../../../transactions/qc/get_all_votes.cdc",
	)
}

func TransactionsQcGet_all_votesCdc() (*asset, error) {
	bytes, err := TransactionsQcGet_all_votesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/qc/get_all_votes.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x67, 0x2e, 0xc8, 0x41, 0xbd, 0xf7, 0xcc, 0x7a, 0x59, 0x5c, 0x70, 0x4b, 0xed, 0x1a, 0x69, 0x91, 0x24, 0x71, 0x21, 0xd5, 0xf, 0x68, 0x26, 0xbd, 0xf1, 0xad, 0x8, 0x42, 0xf, 0xb2, 0x56, 0x34}}
	return a, nil
}

var _TransactionsQcGet_clustersCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x0a\xc2\x30\x10\x06\xe0\x3d\x4f\xf1\x8f\xed\x22\xce\x6e\x92\xea\x5e\x33\x96\x0e\xb5\x5c\xca\x41\x92\x2b\xd7\x3b\x14\xc4\x77\xf7\x05\x7c\x81\x8f\xeb\x2e\x6a\xb8\x17\x79\x8d\x2e\xea\x35\x92\x1a\x67\x5e\x17\x23\x64\x95\x8a\xf3\x7b\x8c\xd7\x61\x78\xdc\x52\x0a\x61\xf7\x27\xb2\x37\xd4\x85\x5b\xd7\x5f\x30\x4d\xc9\x94\xdb\x36\xcf\xf8\x04\x00\x50\x32\xd7\xf6\xdf\x3b\x6d\x64\x51\x4a\xa1\xd5\x44\x63\xf1\xc3\x48\x8f\xae\x0f\xdf\x5f\x00\x00\x00\xff\xff\x94\xf7\x93\x87\x85\x00\x00\x00"

func TransactionsQcGet_clustersCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsQcGet_clustersCdc,
		"../../../transactions/qc/get_clusters.cdc",
	)
}

func TransactionsQcGet_clustersCdc() (*asset, error) {
	bytes, err := TransactionsQcGet_clustersCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/qc/get_clusters.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe9, 0xa0, 0xd4, 0x3f, 0x3f, 0xfe, 0x67, 0xe2, 0xd, 0x19, 0x4d, 0x29, 0xa4, 0xc5, 0x22, 0x8c, 0xcf, 0x76, 0xdf, 0xdd, 0x4c, 0xa1, 0xe0, 0x34, 0x99, 0xc7, 0x50, 0x4f, 0x3f, 0xa3, 0xee, 0xb5}}
	return a, nil
}

var _TransactionsQcGet_votes_in_clusterCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\xca\xc2\x30\x10\x07\xf0\x3d\x4f\xf1\xff\xb6\xaf\x8b\x38\x77\x2b\xa9\x42\xc7\x5a\x70\x11\x87\x5a\x2f\x25\x90\x5c\xca\xf5\x0e\x0b\xe2\xbb\x3b\x38\x09\xbe\xc0\x2f\xe6\xa5\x88\xe2\x98\xca\xa3\xb7\x22\x96\x3d\x89\xc6\x10\xa7\x51\x09\x41\x4a\xc6\x7e\xeb\x7d\xd3\xb6\xa7\xc3\x30\x38\xb7\xd8\x0d\xc1\x18\x79\x8c\xfc\x3f\x25\x5b\x95\xa4\xe3\x3b\x6d\x35\x3a\xd6\xaa\xc6\x65\x50\x89\x3c\x5f\xf1\x74\x00\x20\xa4\x26\xfc\x9b\xdf\xcd\xa4\x4d\x4a\xbd\x3f\x17\xa5\xb5\x63\xff\xe1\xbe\xd8\xea\xcf\xbd\xde\x01\x00\x00\xff\xff\xbe\xb9\xbc\x60\xa3\x00\x00\x00"

func TransactionsQcGet_votes_in_clusterCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsQcGet_votes_in_clusterCdc,
		"../../../transactions/qc/get_votes_in_cluster.cdc",
	)
}

func TransactionsQcGet_votes_in_clusterCdc() (*asset, error) {
	bytes, err := TransactionsQcGet_votes_in_clusterCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/qc/get_votes_in_cluster.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0x4e, 0xd8, 0x41, 0xd0, 0xca, 0x52, 0x95, 0xfa, 0xca, 0xaa, 0x2, 0x4, 0x76, 0x3c, 0xea, 0x34, 0xab, 0xca, 0xae, 0xe5, 0x52, 0xc7, 0x23, 0x34, 0xbb, 0xd9, 0x3d, 0x3a, 0xe9, 0x5, 0xad}}
	return a, nil
}

var _TransactionsQcReset_qc_votingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd1\xcd\x6a\xe3\x40\x0c\x07\xf0\xbb\x9f\x42\x9b\xc3\x62\x5f\xec\x3d\x87\x6d\x83\x99\xb4\xa7\x5e\x9c\x40\xef\xf2\x44\x93\x4c\x19\x8f\x8c\xa2\x69\x52\x4a\xde\xbd\xf8\x23\x85\x94\x50\x5d\x0c\xe2\x2f\xeb\x27\xc6\x77\x3d\x8b\xc2\x73\xe0\x53\x93\x58\x52\x67\x48\xd4\x3b\x6f\x51\x09\x9c\x70\x07\xff\xce\x8d\xa9\xd7\xeb\xcd\xd3\x76\x9b\x65\x99\x0a\xc6\x23\x5a\xf5\x1c\xf3\x02\x3e\x33\x00\x80\xaa\x82\x17\xb6\x18\xe0\x1d\xc5\x63\x1b\x08\x1c\x0b\x20\x08\x39\x12\x8a\x96\x40\x19\xf4\x40\xd0\x18\xa8\x77\x9d\x8f\xc0\xed\x1b\x59\x1d\x87\x03\x29\xe0\xd0\xdc\x90\x5b\xc2\xdf\xbb\x90\x72\x9c\xca\xc6\x7c\x2f\xd4\xa3\x50\x8e\xd6\xea\x12\xea\xa4\x87\xda\x5a\x4e\x51\x07\xcd\x98\x98\x49\x2d\x8b\xf0\xe9\x1e\x03\x7f\x1a\x86\x3a\x52\x70\xe5\x15\x02\x0f\x53\x68\xfe\x75\xb9\x27\x35\xd8\x63\xeb\x83\xd7\x8f\xff\xbf\x21\x1f\xf3\xaa\x4f\x6d\xf0\xb6\x72\x43\xc8\x8c\xcd\xe2\x4f\x39\x69\xf2\xe2\x7b\xdf\x50\xab\x15\xf4\x18\xbd\xcd\x17\x86\x53\xd8\x41\x64\xbd\xb2\x6f\xd0\x8d\x99\x38\x8b\x62\xba\xf0\x32\x7d\xe8\x4c\x36\x29\xcd\xaf\x70\x7b\xc4\x7e\x43\xae\x14\x3a\x92\x36\xe6\x95\xd5\xc7\xfd\xbc\xfb\x92\x5d\xbe\x02\x00\x00\xff\xff\xd0\x9e\xd8\xdf\xf4\x01\x00\x00"

func TransactionsQcReset_qc_votingCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsQcReset_qc_votingCdc,
		"../../../transactions/qc/reset_qc_voting.cdc",
	)
}

func TransactionsQcReset_qc_votingCdc() (*asset, error) {
	bytes, err := TransactionsQcReset_qc_votingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/qc/reset_qc_voting.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9f, 0x4a, 0x53, 0xcb, 0x77, 0x3b, 0xd7, 0x85, 0x34, 0xe2, 0x57, 0xb1, 0x24, 0xce, 0xef, 0xd7, 0x22, 0x63, 0x89, 0x6c, 0xf2, 0xa0, 0x64, 0x86, 0x17, 0xe, 0x14, 0x3c, 0x9f, 0x1c, 0x55, 0xdb}}
	return a, nil
}

var _TransactionsQcSet_collector_clustersCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xcf\x6e\xc2\x30\x0c\x87\xef\x7d\x0a\x8f\xc3\xd4\x5e\xda\x9d\xd1\x36\x54\x85\xed\xb4\x4b\xe1\x88\x38\xa4\xc1\x81\x4c\x69\x5c\xb9\xce\x60\x9a\x78\xf7\xa9\x7f\x40\x62\x42\xf3\x25\x92\xf5\xb3\xf3\x59\x9f\x6b\x5a\x62\x81\x77\x4f\xc7\x2a\x12\xc7\x46\x21\x8b\xb3\xce\x68\x41\xb0\x4c\x0d\x3c\x9d\x2a\x55\x2e\x97\xab\xb7\xf5\x3a\x49\x12\x61\x1d\x3a\x6d\xc4\x51\x48\x8d\x8f\x9d\x20\x77\x73\xd8\x6c\xd6\xc2\x2e\xec\xb7\xdb\x0c\x7e\x12\x00\x80\xa2\x80\x0f\x32\xda\xc3\x97\x66\xa7\x6b\x8f\x60\x89\x41\x03\xa3\x45\xc6\x60\x10\x84\x40\x0e\x08\x95\x82\x72\xd7\xb8\x00\x54\x7f\xa2\x91\x61\xd8\xa3\x80\xee\x9b\x2b\xb4\x73\x78\xbc\x0b\x97\x0f\x53\xc9\x90\x6f\x19\x5b\xcd\x98\x6a\x63\x64\x0e\x65\x94\x43\x69\x0c\xc5\x20\x3d\xcd\x90\x98\x90\x6a\x62\xa6\xe3\x3d\x0c\xfd\x97\xa1\xaf\x0e\xbd\xcd\x2f\x20\xf0\x32\x86\xa6\xd5\xf9\x1e\x45\xe9\x56\xd7\xce\x3b\xf9\x7e\xfe\x0f\xf2\x35\x2d\xda\x58\x7b\x67\x0a\xdb\x87\xd4\xd0\xcc\x1e\xf2\x91\x26\xcd\xae\xff\xf5\xb5\x58\x40\xab\x83\x33\xe9\x4c\x51\xf4\x3b\x08\x24\x17\xec\x1b\xe8\x4a\x8d\x38\xb3\x6c\xbc\xf0\x3c\x3e\x78\x42\x13\x05\x27\x0b\xb7\x47\xec\x57\x68\xf3\x0e\x45\x91\xf7\x68\x84\x58\x4d\x02\xd3\x80\x47\x75\x95\x79\xd1\x9a\x4d\x7b\xcf\xbf\x01\x00\x00\xff\xff\xbf\x07\xf3\x98\x24\x02\x00\x00"

func TransactionsQcSet_collector_clustersCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsQcSet_collector_clustersCdc,
		"../../../transactions/qc/set_collector_clusters.cdc",
	)
}

func TransactionsQcSet_collector_clustersCdc() (*asset, error) {
	bytes, err := TransactionsQcSet_collector_clustersCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/qc/set_collector_clusters.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x48, 0xe0, 0x5b, 0x3a, 0x12, 0x20, 0x14, 0x4c, 0xb8, 0x5e, 0xc, 0x99, 0xae, 0x2a, 0x6e, 0xa0, 0x8c, 0xc, 0xe, 0xd5, 0xeb, 0x4c, 0xab, 0x8e, 0xe8, 0xe5, 0x27, 0x21, 0x4, 0xb0, 0x44}}
	return a, nil
}

var _TransactionsQcSubmit_qc_voteCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4f\x6b\xe3\x30\x10\xc5\xef\xfe\x14\x8f\x1c\x16\x07\x16\x7b\xcf\x61\x77\x43\x50\xda\x53\x29\x38\x81\xde\x65\x79\x9c\xa8\xd8\x1a\x33\x1e\x35\x81\x92\xef\x5e\xe4\xfc\x81\x94\x50\x9d\xc4\xf0\xde\x9b\x9f\xf4\x7c\x3f\xb0\x28\x9e\x3b\x3e\x54\x91\x25\xf6\x86\x44\x7d\xeb\x9d\x55\x42\x2b\xdc\xe3\xcf\xb1\x32\xab\xf5\x7a\xf3\xb4\xdd\x66\x59\xa6\x62\xc3\x68\x9d\x7a\x0e\xb9\x6f\x16\xd8\xaa\xf8\xb0\xfb\x8d\xd1\xef\x82\xd5\x28\x74\x1d\xcd\xf1\x99\x01\x40\x59\xe2\x85\x9d\xed\xf0\x61\xc5\xdb\xba\x23\xb4\x2c\xb0\x10\x6a\x49\x28\x38\x82\x32\x74\x4f\xa8\x0c\x5e\xb9\xa1\xc9\xd4\x91\x22\x70\x43\x1b\x6a\x17\xf8\xf5\x10\xae\x48\xe2\xca\x64\x93\x7e\x10\x1a\xac\x50\x6e\x9d\xd3\x05\x56\x51\xf7\x2b\xe7\x38\x06\x4d\x14\x93\xe2\x82\x52\xb3\x08\x1f\x1e\xad\x4f\xeb\xc0\xf5\x3b\x39\xbd\x19\x46\xea\xda\xe2\xc2\x81\x7f\x48\xe9\xc5\x39\xe1\xef\x8f\x50\xff\xf3\x72\x54\x16\xbb\xa3\xb2\x4d\x32\x93\xc6\xf3\x5b\x6c\x3a\xcb\x25\x06\x1b\xbc\xcb\x67\x86\x63\xd7\x20\xb0\x5e\xe1\xee\xd0\x2a\x33\x91\xcd\xce\xee\xd3\xf9\x31\x74\x24\x17\x95\x2e\x3f\xfc\x9d\xb4\x18\x63\xdd\x7b\xad\xcc\x1b\x2b\x4d\x25\xf9\xe6\xae\xa0\xdb\xf5\x1a\x7a\xfa\x0a\x00\x00\xff\xff\x36\xb8\xb9\xcf\x06\x02\x00\x00"

func TransactionsQcSubmit_qc_voteCdcBytes() ([]byte, error) {
	return bindataRead(
		_TransactionsQcSubmit_qc_voteCdc,
		"../../../transactions/qc/submit_qc_vote.cdc",
	)
}

func TransactionsQcSubmit_qc_voteCdc() (*asset, error) {
	bytes, err := TransactionsQcSubmit_qc_voteCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../../../transactions/qc/submit_qc_vote.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x97, 0x6e, 0xec, 0xd0, 0xb0, 0xb9, 0x89, 0x4, 0xd1, 0x6d, 0x64, 0x5a, 0x96, 0xe4, 0xb1, 0x1, 0x5f, 0x6c, 0xb6, 0xc2, 0xb8, 0xc1, 0xd4, 0xa3, 0xa1, 0x59, 0x3a, 0xdd, 0xa9, 0x9f, 0x2c, 0x86}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../../../transactions/idTableStaking/admin/end_staking.cdc":                       TransactionsIdtablestakingAdminEnd_stakingCdc,
	"../../../transactions/idTableStaking/admin/move_tokens.cdc":                       TransactionsIdtablestakingAdminMove_tokensCdc,
	"../../../transactions/idTableStaking/admin/pay_rewards.cdc":                       TransactionsIdtablestakingAdminPay_rewardsCdc,
	"../../../transactions/idTableStaking/admin/remove_node.cdc":                       TransactionsIdtablestakingAdminRemove_nodeCdc,
	"../../../transactions/idTableStaking/admin/transfer_minter_deploy.cdc":            TransactionsIdtablestakingAdminTransfer_minter_deployCdc,
	"../../../transactions/idTableStaking/create_staking_request.cdc":                  TransactionsIdtablestakingCreate_staking_requestCdc,
	"../../../transactions/idTableStaking/delegation/del_create_delegation.cdc":        TransactionsIdtablestakingDelegationDel_create_delegationCdc,
	"../../../transactions/idTableStaking/delegation/del_register_delegator.cdc":       TransactionsIdtablestakingDelegationDel_register_delegatorCdc,
	"../../../transactions/idTableStaking/delegation/del_request_unstaking.cdc":        TransactionsIdtablestakingDelegationDel_request_unstakingCdc,
	"../../../transactions/idTableStaking/delegation/del_stake_new_tokens.cdc":         TransactionsIdtablestakingDelegationDel_stake_new_tokensCdc,
	"../../../transactions/idTableStaking/delegation/del_stake_rewarded.cdc":           TransactionsIdtablestakingDelegationDel_stake_rewardedCdc,
	"../../../transactions/idTableStaking/delegation/del_stake_unlocked.cdc":           TransactionsIdtablestakingDelegationDel_stake_unlockedCdc,
	"../../../transactions/idTableStaking/delegation/del_withdraw_reward_tokens.cdc":   TransactionsIdtablestakingDelegationDel_withdraw_reward_tokensCdc,
	"../../../transactions/idTableStaking/delegation/del_withdraw_unlocked_tokens.cdc": TransactionsIdtablestakingDelegationDel_withdraw_unlocked_tokensCdc,
	"../../../transactions/idTableStaking/delegation/get_delegator_committed.cdc":      TransactionsIdtablestakingDelegationGet_delegator_committedCdc,
	"../../../transactions/idTableStaking/delegation/get_delegator_request.cdc":        TransactionsIdtablestakingDelegationGet_delegator_requestCdc,
	"../../../transactions/idTableStaking/delegation/get_delegator_rewarded.cdc":       TransactionsIdtablestakingDelegationGet_delegator_rewardedCdc,
	"../../../transactions/idTableStaking/delegation/get_delegator_staked.cdc":         TransactionsIdtablestakingDelegationGet_delegator_stakedCdc,
	"../../../transactions/idTableStaking/delegation/get_delegator_unlocked.cdc":       TransactionsIdtablestakingDelegationGet_delegator_unlockedCdc,
	"../../../transactions/idTableStaking/delegation/get_delegator_unstaked.cdc":       TransactionsIdtablestakingDelegationGet_delegator_unstakedCdc,
	"../../../transactions/idTableStaking/get_current_table.cdc":                       TransactionsIdtablestakingGet_current_tableCdc,
	"../../../transactions/idTableStaking/get_nodeType_ratio.cdc":                      TransactionsIdtablestakingGet_nodetype_ratioCdc,
	"../../../transactions/idTableStaking/get_node_committedTokens.cdc":                TransactionsIdtablestakingGet_node_committedtokensCdc,
	"../../../transactions/idTableStaking/get_node_direct_stakedTokens.cdc":            TransactionsIdtablestakingGet_node_direct_stakedtokensCdc,
	"../../../transactions/idTableStaking/get_node_initial_weight.cdc":                 TransactionsIdtablestakingGet_node_initial_weightCdc,
	"../../../transactions/idTableStaking/get_node_networking_addr.cdc":                TransactionsIdtablestakingGet_node_networking_addrCdc,
	"../../../transactions/idTableStaking/get_node_networking_key.cdc":                 TransactionsIdtablestakingGet_node_networking_keyCdc,
	"../../../transactions/idTableStaking/get_node_rewardedTokens.cdc":                 TransactionsIdtablestakingGet_node_rewardedtokensCdc,
	"../../../transactions/idTableStaking/get_node_role.cdc":                           TransactionsIdtablestakingGet_node_roleCdc,
	"../../../transactions/idTableStaking/get_node_stakedTokens.cdc":                   TransactionsIdtablestakingGet_node_stakedtokensCdc,
	"../../../transactions/idTableStaking/get_node_staking_key.cdc":                    TransactionsIdtablestakingGet_node_staking_keyCdc,
	"../../../transactions/idTableStaking/get_node_total_commitment.cdc":               TransactionsIdtablestakingGet_node_total_commitmentCdc,
	"../../../transactions/idTableStaking/get_node_unlockedTokens.cdc":                 TransactionsIdtablestakingGet_node_unlockedtokensCdc,
	"../../../transactions/idTableStaking/get_node_unstakedTokens.cdc":                 TransactionsIdtablestakingGet_node_unstakedtokensCdc,
	"../../../transactions/idTableStaking/get_proposed_table.cdc":                      TransactionsIdtablestakingGet_proposed_tableCdc,
	"../../../transactions/idTableStaking/get_stakeRequirements.cdc":                   TransactionsIdtablestakingGet_stakerequirementsCdc,
	"../../../transactions/idTableStaking/get_table.cdc":                               TransactionsIdtablestakingGet_tableCdc,
	"../../../transactions/idTableStaking/get_totalStaked_by_type.cdc":                 TransactionsIdtablestakingGet_totalstaked_by_typeCdc,
	"../../../transactions/idTableStaking/get_unstaking_request.cdc":                   TransactionsIdtablestakingGet_unstaking_requestCdc,
	"../../../transactions/idTableStaking/get_weeklyPayout.cdc":                        TransactionsIdtablestakingGet_weeklypayoutCdc,
	"../../../transactions/idTableStaking/request_unstake.cdc":                         TransactionsIdtablestakingRequest_unstakeCdc,
	"../../../transactions/idTableStaking/stake_new_tokens.cdc":                        TransactionsIdtablestakingStake_new_tokensCdc,
	"../../../transactions/idTableStaking/stake_rewarded_tokens.cdc":                   TransactionsIdtablestakingStake_rewarded_tokensCdc,
	"../../../transactions/idTableStaking/stake_unlocked_tokens.cdc":                   TransactionsIdtablestakingStake_unlocked_tokensCdc,
	"../../../transactions/idTableStaking/withdraw_reward_tokens.cdc":                  TransactionsIdtablestakingWithdraw_reward_tokensCdc,
	"../../../transactions/idTableStaking/withdraw_unlocked_tokens.cdc":                TransactionsIdtablestakingWithdraw_unlocked_tokensCdc,
	"../../../transactions/inspect_field.cdc":                                          TransactionsInspect_fieldCdc,
	"../../../transactions/qc/create_qc_object.cdc":                                    TransactionsQcCreate_qc_objectCdc,
	"../../../transactions/qc/get_all_votes.cdc":                                       TransactionsQcGet_all_votesCdc,
	"../../../transactions/qc/get_clusters.cdc":                                        TransactionsQcGet_clustersCdc,
	"../../../transactions/qc/get_votes_in_cluster.cdc":                                TransactionsQcGet_votes_in_clusterCdc,
	"../../../transactions/qc/reset_qc_voting.cdc":                                     TransactionsQcReset_qc_votingCdc,
	"../../../transactions/qc/set_collector_clusters.cdc":                              TransactionsQcSet_collector_clustersCdc,
	"../../../transactions/qc/submit_qc_vote.cdc":                                      TransactionsQcSubmit_qc_voteCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"..": &bintree{nil, map[string]*bintree{
			"..": &bintree{nil, map[string]*bintree{
				"transactions": &bintree{nil, map[string]*bintree{
					"idTableStaking": &bintree{nil, map[string]*bintree{
						"admin": &bintree{nil, map[string]*bintree{
							"end_staking.cdc":            &bintree{TransactionsIdtablestakingAdminEnd_stakingCdc, map[string]*bintree{}},
							"move_tokens.cdc":            &bintree{TransactionsIdtablestakingAdminMove_tokensCdc, map[string]*bintree{}},
							"pay_rewards.cdc":            &bintree{TransactionsIdtablestakingAdminPay_rewardsCdc, map[string]*bintree{}},
							"remove_node.cdc":            &bintree{TransactionsIdtablestakingAdminRemove_nodeCdc, map[string]*bintree{}},
							"transfer_minter_deploy.cdc": &bintree{TransactionsIdtablestakingAdminTransfer_minter_deployCdc, map[string]*bintree{}},
						}},
						"create_staking_request.cdc": &bintree{TransactionsIdtablestakingCreate_staking_requestCdc, map[string]*bintree{}},
						"delegation": &bintree{nil, map[string]*bintree{
							"del_create_delegation.cdc":        &bintree{TransactionsIdtablestakingDelegationDel_create_delegationCdc, map[string]*bintree{}},
							"del_register_delegator.cdc":       &bintree{TransactionsIdtablestakingDelegationDel_register_delegatorCdc, map[string]*bintree{}},
							"del_request_unstaking.cdc":        &bintree{TransactionsIdtablestakingDelegationDel_request_unstakingCdc, map[string]*bintree{}},
							"del_stake_new_tokens.cdc":         &bintree{TransactionsIdtablestakingDelegationDel_stake_new_tokensCdc, map[string]*bintree{}},
							"del_stake_rewarded.cdc":           &bintree{TransactionsIdtablestakingDelegationDel_stake_rewardedCdc, map[string]*bintree{}},
							"del_stake_unlocked.cdc":           &bintree{TransactionsIdtablestakingDelegationDel_stake_unlockedCdc, map[string]*bintree{}},
							"del_withdraw_reward_tokens.cdc":   &bintree{TransactionsIdtablestakingDelegationDel_withdraw_reward_tokensCdc, map[string]*bintree{}},
							"del_withdraw_unlocked_tokens.cdc": &bintree{TransactionsIdtablestakingDelegationDel_withdraw_unlocked_tokensCdc, map[string]*bintree{}},
							"get_delegator_committed.cdc":      &bintree{TransactionsIdtablestakingDelegationGet_delegator_committedCdc, map[string]*bintree{}},
							"get_delegator_request.cdc":        &bintree{TransactionsIdtablestakingDelegationGet_delegator_requestCdc, map[string]*bintree{}},
							"get_delegator_rewarded.cdc":       &bintree{TransactionsIdtablestakingDelegationGet_delegator_rewardedCdc, map[string]*bintree{}},
							"get_delegator_staked.cdc":         &bintree{TransactionsIdtablestakingDelegationGet_delegator_stakedCdc, map[string]*bintree{}},
							"get_delegator_unlocked.cdc":       &bintree{TransactionsIdtablestakingDelegationGet_delegator_unlockedCdc, map[string]*bintree{}},
							"get_delegator_unstaked.cdc":       &bintree{TransactionsIdtablestakingDelegationGet_delegator_unstakedCdc, map[string]*bintree{}},
						}},
						"get_current_table.cdc":            &bintree{TransactionsIdtablestakingGet_current_tableCdc, map[string]*bintree{}},
						"get_nodeType_ratio.cdc":           &bintree{TransactionsIdtablestakingGet_nodetype_ratioCdc, map[string]*bintree{}},
						"get_node_committedTokens.cdc":     &bintree{TransactionsIdtablestakingGet_node_committedtokensCdc, map[string]*bintree{}},
						"get_node_direct_stakedTokens.cdc": &bintree{TransactionsIdtablestakingGet_node_direct_stakedtokensCdc, map[string]*bintree{}},
						"get_node_initial_weight.cdc":      &bintree{TransactionsIdtablestakingGet_node_initial_weightCdc, map[string]*bintree{}},
						"get_node_networking_addr.cdc":     &bintree{TransactionsIdtablestakingGet_node_networking_addrCdc, map[string]*bintree{}},
						"get_node_networking_key.cdc":      &bintree{TransactionsIdtablestakingGet_node_networking_keyCdc, map[string]*bintree{}},
						"get_node_rewardedTokens.cdc":      &bintree{TransactionsIdtablestakingGet_node_rewardedtokensCdc, map[string]*bintree{}},
						"get_node_role.cdc":                &bintree{TransactionsIdtablestakingGet_node_roleCdc, map[string]*bintree{}},
						"get_node_stakedTokens.cdc":        &bintree{TransactionsIdtablestakingGet_node_stakedtokensCdc, map[string]*bintree{}},
						"get_node_staking_key.cdc":         &bintree{TransactionsIdtablestakingGet_node_staking_keyCdc, map[string]*bintree{}},
						"get_node_total_commitment.cdc":    &bintree{TransactionsIdtablestakingGet_node_total_commitmentCdc, map[string]*bintree{}},
						"get_node_unlockedTokens.cdc":      &bintree{TransactionsIdtablestakingGet_node_unlockedtokensCdc, map[string]*bintree{}},
						"get_node_unstakedTokens.cdc":      &bintree{TransactionsIdtablestakingGet_node_unstakedtokensCdc, map[string]*bintree{}},
						"get_proposed_table.cdc":           &bintree{TransactionsIdtablestakingGet_proposed_tableCdc, map[string]*bintree{}},
						"get_stakeRequirements.cdc":        &bintree{TransactionsIdtablestakingGet_stakerequirementsCdc, map[string]*bintree{}},
						"get_table.cdc":                    &bintree{TransactionsIdtablestakingGet_tableCdc, map[string]*bintree{}},
						"get_totalStaked_by_type.cdc":      &bintree{TransactionsIdtablestakingGet_totalstaked_by_typeCdc, map[string]*bintree{}},
						"get_unstaking_request.cdc":        &bintree{TransactionsIdtablestakingGet_unstaking_requestCdc, map[string]*bintree{}},
						"get_weeklyPayout.cdc":             &bintree{TransactionsIdtablestakingGet_weeklypayoutCdc, map[string]*bintree{}},
						"request_unstake.cdc":              &bintree{TransactionsIdtablestakingRequest_unstakeCdc, map[string]*bintree{}},
						"stake_new_tokens.cdc":             &bintree{TransactionsIdtablestakingStake_new_tokensCdc, map[string]*bintree{}},
						"stake_rewarded_tokens.cdc":        &bintree{TransactionsIdtablestakingStake_rewarded_tokensCdc, map[string]*bintree{}},
						"stake_unlocked_tokens.cdc":        &bintree{TransactionsIdtablestakingStake_unlocked_tokensCdc, map[string]*bintree{}},
						"withdraw_reward_tokens.cdc":       &bintree{TransactionsIdtablestakingWithdraw_reward_tokensCdc, map[string]*bintree{}},
						"withdraw_unlocked_tokens.cdc":     &bintree{TransactionsIdtablestakingWithdraw_unlocked_tokensCdc, map[string]*bintree{}},
					}},
					"inspect_field.cdc": &bintree{TransactionsInspect_fieldCdc, map[string]*bintree{}},
					"qc": &bintree{nil, map[string]*bintree{
						"create_qc_object.cdc":       &bintree{TransactionsQcCreate_qc_objectCdc, map[string]*bintree{}},
						"get_all_votes.cdc":          &bintree{TransactionsQcGet_all_votesCdc, map[string]*bintree{}},
						"get_clusters.cdc":           &bintree{TransactionsQcGet_clustersCdc, map[string]*bintree{}},
						"get_votes_in_cluster.cdc":   &bintree{TransactionsQcGet_votes_in_clusterCdc, map[string]*bintree{}},
						"reset_qc_voting.cdc":        &bintree{TransactionsQcReset_qc_votingCdc, map[string]*bintree{}},
						"set_collector_clusters.cdc": &bintree{TransactionsQcSet_collector_clustersCdc, map[string]*bintree{}},
						"submit_qc_vote.cdc":         &bintree{TransactionsQcSubmit_qc_voteCdc, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
